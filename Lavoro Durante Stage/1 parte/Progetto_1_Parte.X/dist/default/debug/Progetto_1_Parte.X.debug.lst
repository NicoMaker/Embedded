

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 03 14:14:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0008                     _PORTD	set	8
   169     0009                     _PORTEbits	set	9
   170     0089                     _TRISE	set	137
   171     0088                     _TRISD	set	136
   172                           
   173                           	psect	strings
   174     0003                     __pstrings:
   175     0003                     stringtab:
   176     0003                     __stringtab:
   177     0003                     stringcode:	
   178                           ;	String table - string pointers are 1 byte each
   179                           
   180     0003                     stringdir:
   181     0003  3000               	movlw	high stringdir
   182     0004  008A               	movwf	10
   183     0005  0804               	movf	4,w
   184     0006  0A84               	incf	4,f
   185     0007  0782               	addwf	2,f
   186     0008                     __stringbase:
   187     0008  3400               	retlw	0
   188     0009                     __end_of__stringtab:
   189     0009                     STR_1:
   190     0009  3463               	retlw	99	;'c'
   191     000A  3469               	retlw	105	;'i'
   192     000B  3461               	retlw	97	;'a'
   193     000C  346F               	retlw	111	;'o'
   194     000D  3400               	retlw	0
   195                           
   196                           	psect	cinit
   197     07FC                     start_initialization:	
   198                           ; #config settings
   199                           
   200     07FC                     __initialization:
   201     07FC                     end_of_initialization:	
   202                           ;End of C runtime variable initialization code
   203                           
   204     07FC                     __end_of__initialization:
   205     07FC  0183               	clrf	3
   206     07FD  120A  118A  2F47   	ljmp	_main	;jump to C main() function
   207                           
   208                           	psect	cstackCOMMON
   209     0070                     __pcstackCOMMON:
   210     0070                     ?_initLCD:
   211     0070                     ?_printStringLCD:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_sendLCD:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ?_main:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     sendLCD@rs:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225     0070                     	ds	1
   226     0071                     ??_sendLCD:
   227                           
   228                           ; 1 bytes @ 0x1
   229     0071                     	ds	2
   230     0073                     sendLCD@dato:
   231                           
   232                           ; 1 bytes @ 0x3
   233     0073                     	ds	1
   234     0074                     ??_initLCD:
   235     0074                     ??_printStringLCD:	
   236                           ; 1 bytes @ 0x4
   237                           
   238     0074                     printStringLCD@s:	
   239                           ; 1 bytes @ 0x4
   240                           
   241                           
   242                           ; 1 bytes @ 0x4
   243     0074                     	ds	1
   244     0075                     printStringLCD@i:
   245                           
   246                           ; 1 bytes @ 0x5
   247     0075                     	ds	1
   248     0076                     ??_main:
   249                           
   250                           	psect	maintext
   251     0747                     __pmaintext:	
   252                           ; 1 bytes @ 0x6
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 44 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels required when called: 2
   278 ;; This function calls:
   279 ;;		_initLCD
   280 ;;		_printStringLCD
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286     0747                     _main:	
   287                           ;psect for function _main
   288                           
   289     0747                     l684:	
   290                           ;incstack = 0
   291                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   292                           
   293                           
   294                           ;main.c: 45:     initLCD();
   295     0747  120A  118A  279E  120A  118A  	fcall	_initLCD
   296     074C                     l686:
   297                           
   298                           ;main.c: 47:     printStringLCD("ciao");
   299     074C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   300     074D  120A  118A  277A  120A  118A  	fcall	_printStringLCD
   301     0752                     l21:	
   302                           ;main.c: 49:     while(1){
   303                           
   304     0752                     l22:	
   305                           ;main.c: 51:     }
   306                           
   307     0752  2F52               	goto	l21
   308     0753  120A  118A  2800   	ljmp	start
   309     0756                     __end_of_main:
   310                           
   311                           	psect	text1
   312     077A                     __ptext1:	
   313 ;; *************** function _printStringLCD *****************
   314 ;; Defined at:
   315 ;;		line 87 in file "main.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;  s               1    wreg     PTR unsigned char 
   318 ;;		 -> STR_1(5), 
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  s               1    4[COMMON] PTR unsigned char 
   321 ;;		 -> STR_1(5), 
   322 ;;  i               1    5[COMMON] unsigned char 
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   332 ;;      Params:         0       0       0       0       0
   333 ;;      Locals:         2       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels used: 1
   338 ;; Hardware stack levels required when called: 1
   339 ;; This function calls:
   340 ;;		_sendLCD
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346     077A                     _printStringLCD:	
   347                           ;psect for function _printStringLCD
   348                           
   349                           
   350                           ;incstack = 0
   351                           ; Regs used in _printStringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   352                           ;printStringLCD@s stored from wreg
   353     077A  00F4               	movwf	printStringLCD@s
   354     077B                     l676:
   355                           
   356                           ;main.c: 88:     char i = 0;
   357     077B  01F5               	clrf	printStringLCD@i
   358                           
   359                           ;main.c: 89:     while (s[i] != '\0') {
   360     077C  2F90               	goto	l682
   361     077D                     l678:
   362                           
   363                           ;main.c: 90:         sendLCD(s[i++], 1);
   364     077D  01F0               	clrf	sendLCD@rs
   365     077E  0AF0               	incf	sendLCD@rs,f
   366     077F  0875               	movf	printStringLCD@i,w
   367     0780  0774               	addwf	printStringLCD@s,w
   368     0781  0084               	movwf	4
   369     0782  120A  118A  2003  120A  118A  	fcall	stringdir
   370     0787  120A  118A  2756  120A  118A  	fcall	_sendLCD
   371     078C                     l680:
   372     078C  3001               	movlw	1
   373     078D  00FF               	movwf	btemp+1
   374     078E  087F               	movf	btemp+1,w
   375     078F  07F5               	addwf	printStringLCD@i,f
   376     0790                     l682:
   377                           
   378                           ;main.c: 89:     while (s[i] != '\0') {
   379     0790  0875               	movf	printStringLCD@i,w
   380     0791  0774               	addwf	printStringLCD@s,w
   381     0792  0084               	movwf	4
   382     0793  120A  118A  2003  120A  118A  	fcall	stringdir
   383     0798  3A00               	xorlw	0
   384     0799  1D03               	skipz
   385     079A  2F9C               	goto	u21
   386     079B  2F9D               	goto	u20
   387     079C                     u21:
   388     079C  2F7D               	goto	l678
   389     079D                     u20:
   390     079D                     l36:
   391     079D  0008               	return
   392     079E                     __end_of_printStringLCD:
   393                           
   394                           	psect	text2
   395     079E                     __ptext2:	
   396 ;; *************** function _initLCD *****************
   397 ;; Defined at:
   398 ;;		line 54 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0
   414 ;;      Temps:          2       0       0       0       0
   415 ;;      Totals:         2       0       0       0       0
   416 ;;Total ram usage:        2 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; Hardware stack levels required when called: 1
   419 ;; This function calls:
   420 ;;		_sendLCD
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426     079E                     _initLCD:	
   427                           ;psect for function _initLCD
   428                           
   429     079E                     l648:	
   430                           ;incstack = 0
   431                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   432                           
   433                           
   434                           ;main.c: 55:     TRISD = 0x00;
   435     079E  1683               	bsf	3,5	;RP0=1, select bank1
   436     079F  1303               	bcf	3,6	;RP1=0, select bank1
   437     07A0  0188               	clrf	8	;volatile
   438     07A1                     l650:
   439                           
   440                           ;main.c: 56:     TRISE &= ~0x06;
   441     07A1  30F9               	movlw	249
   442     07A2  00FF               	movwf	btemp+1
   443     07A3  087F               	movf	btemp+1,w
   444     07A4  0589               	andwf	9,f	;volatile
   445     07A5                     l652:
   446                           
   447                           ;main.c: 58:     _delay((unsigned long)((20)*(8000000/4000.0)));
   448     07A5  3034               	movlw	52
   449     07A6  00F5               	movwf	??_initLCD+1
   450     07A7  30F1               	movlw	241
   451     07A8  00F4               	movwf	??_initLCD
   452     07A9                     u37:
   453     07A9  0BF4               	decfsz	??_initLCD,f
   454     07AA  2FA9               	goto	u37
   455     07AB  0BF5               	decfsz	??_initLCD+1,f
   456     07AC  2FA9               	goto	u37
   457     07AD  2FAE               	nop2
   458     07AE                     l654:
   459                           
   460                           ;main.c: 59:     PORTEbits.RE1 = 1;
   461     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   462     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   463     07B0  1489               	bsf	9,1	;volatile
   464     07B1                     l656:
   465                           
   466                           ;main.c: 60:     sendLCD(0x38, 0);
   467     07B1  01F0               	clrf	sendLCD@rs
   468     07B2  3038               	movlw	56
   469     07B3  120A  118A  2756  120A  118A  	fcall	_sendLCD
   470     07B8                     l658:
   471                           
   472                           ;main.c: 62:     _delay((unsigned long)((5)*(8000000/4000.0)));
   473     07B8  300D               	movlw	13
   474     07B9  00F5               	movwf	??_initLCD+1
   475     07BA  30FB               	movlw	251
   476     07BB  00F4               	movwf	??_initLCD
   477     07BC                     u47:
   478     07BC  0BF4               	decfsz	??_initLCD,f
   479     07BD  2FBC               	goto	u47
   480     07BE  0BF5               	decfsz	??_initLCD+1,f
   481     07BF  2FBC               	goto	u47
   482     07C0  2FC1               	nop2
   483     07C1                     l660:
   484                           
   485                           ;main.c: 63:     sendLCD(0x38, 0);
   486     07C1  01F0               	clrf	sendLCD@rs
   487     07C2  3038               	movlw	56
   488     07C3  120A  118A  2756  120A  118A  	fcall	_sendLCD
   489     07C8                     l662:
   490                           
   491                           ;main.c: 65:     _delay((unsigned long)((1)*(8000000/4000.0)));
   492     07C8  3003               	movlw	3
   493     07C9  00F5               	movwf	??_initLCD+1
   494     07CA  3097               	movlw	151
   495     07CB  00F4               	movwf	??_initLCD
   496     07CC                     u57:
   497     07CC  0BF4               	decfsz	??_initLCD,f
   498     07CD  2FCC               	goto	u57
   499     07CE  0BF5               	decfsz	??_initLCD+1,f
   500     07CF  2FCC               	goto	u57
   501     07D0  2FD1               	nop2
   502     07D1                     l664:
   503                           
   504                           ;main.c: 66:     sendLCD(0x38, 0);
   505     07D1  01F0               	clrf	sendLCD@rs
   506     07D2  3038               	movlw	56
   507     07D3  120A  118A  2756  120A  118A  	fcall	_sendLCD
   508     07D8                     l666:
   509                           
   510                           ;main.c: 68:     sendLCD(0x08, 0);
   511     07D8  01F0               	clrf	sendLCD@rs
   512     07D9  3008               	movlw	8
   513     07DA  120A  118A  2756  120A  118A  	fcall	_sendLCD
   514     07DF                     l668:
   515                           
   516                           ;main.c: 69:     sendLCD(0x0F, 0);
   517     07DF  01F0               	clrf	sendLCD@rs
   518     07E0  300F               	movlw	15
   519     07E1  120A  118A  2756  120A  118A  	fcall	_sendLCD
   520     07E6                     l670:
   521                           
   522                           ;main.c: 70:     sendLCD(0x01, 0);
   523     07E6  01F0               	clrf	sendLCD@rs
   524     07E7  3001               	movlw	1
   525     07E8  120A  118A  2756  120A  118A  	fcall	_sendLCD
   526     07ED                     l672:
   527                           
   528                           ;main.c: 71:     sendLCD(0x0E, 0);
   529     07ED  01F0               	clrf	sendLCD@rs
   530     07EE  300E               	movlw	14
   531     07EF  120A  118A  2756  120A  118A  	fcall	_sendLCD
   532     07F4                     l674:
   533                           
   534                           ;main.c: 72:     sendLCD(0x80, 0);
   535     07F4  01F0               	clrf	sendLCD@rs
   536     07F5  3080               	movlw	128
   537     07F6  120A  118A  2756  120A  118A  	fcall	_sendLCD
   538     07FB                     l27:
   539     07FB  0008               	return
   540     07FC                     __end_of_initLCD:
   541                           
   542                           	psect	text3
   543     0756                     __ptext3:	
   544 ;; *************** function _sendLCD *****************
   545 ;; Defined at:
   546 ;;		line 75 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  dato            1    wreg     unsigned char 
   549 ;;  rs              1    0[COMMON] unsigned char 
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  dato            1    3[COMMON] unsigned char 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,0
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         1       0       0       0       0
   562 ;;      Locals:         1       0       0       0       0
   563 ;;      Temps:          2       0       0       0       0
   564 ;;      Totals:         4       0       0       0       0
   565 ;;Total ram usage:        4 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_initLCD
   571 ;;		_printStringLCD
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575     0756                     _sendLCD:	
   576                           ;psect for function _sendLCD
   577                           
   578                           
   579                           ;incstack = 0
   580                           ; Regs used in _sendLCD: [wreg+status,0]
   581                           ;sendLCD@dato stored from wreg
   582     0756  00F3               	movwf	sendLCD@dato
   583     0757                     l634:
   584                           
   585                           ;main.c: 76:     PORTEbits.RE1 = 1;
   586     0757  1283               	bcf	3,5	;RP0=0, select bank0
   587     0758  1303               	bcf	3,6	;RP1=0, select bank0
   588     0759  1489               	bsf	9,1	;volatile
   589     075A                     l636:
   590                           
   591                           ;main.c: 77:     PORTD = dato;
   592     075A  0873               	movf	sendLCD@dato,w
   593     075B  0088               	movwf	8	;volatile
   594     075C                     l638:
   595                           
   596                           ;main.c: 78:     PORTEbits.RE2 = rs;
   597     075C  0C70               	rrf	sendLCD@rs,w
   598     075D  1C03               	skipc
   599     075E  1109               	bcf	9,2	;volatile
   600     075F  1803               	skipnc
   601     0760  1509               	bsf	9,2	;volatile
   602     0761                     l640:
   603                           
   604                           ;main.c: 79:     _delay((unsigned long)((3)*(8000000/4000.0)));
   605     0761  3008               	movlw	8
   606     0762  00F2               	movwf	??_sendLCD+1
   607     0763  30C9               	movlw	201
   608     0764  00F1               	movwf	??_sendLCD
   609     0765                     u67:
   610     0765  0BF1               	decfsz	??_sendLCD,f
   611     0766  2F65               	goto	u67
   612     0767  0BF2               	decfsz	??_sendLCD+1,f
   613     0768  2F65               	goto	u67
   614     0769  2F6A               	nop2
   615     076A                     l642:
   616                           
   617                           ;main.c: 81:     PORTEbits.RE1 = 0;
   618     076A  1283               	bcf	3,5	;RP0=0, select bank0
   619     076B  1303               	bcf	3,6	;RP1=0, select bank0
   620     076C  1089               	bcf	9,1	;volatile
   621     076D                     l644:
   622                           
   623                           ;main.c: 82:     _delay((unsigned long)((3)*(8000000/4000.0)));
   624     076D  3008               	movlw	8
   625     076E  00F2               	movwf	??_sendLCD+1
   626     076F  30C9               	movlw	201
   627     0770  00F1               	movwf	??_sendLCD
   628     0771                     u77:
   629     0771  0BF1               	decfsz	??_sendLCD,f
   630     0772  2F71               	goto	u77
   631     0773  0BF2               	decfsz	??_sendLCD+1,f
   632     0774  2F71               	goto	u77
   633     0775  2F76               	nop2
   634     0776                     l646:
   635                           
   636                           ;main.c: 84:     PORTEbits.RE1 = 1;
   637     0776  1283               	bcf	3,5	;RP0=0, select bank0
   638     0777  1303               	bcf	3,6	;RP1=0, select bank0
   639     0778  1489               	bsf	9,1	;volatile
   640     0779                     l30:
   641     0779  0008               	return
   642     077A                     __end_of_sendLCD:
   643     007E                     btemp	set	126	;btemp
   644     007E                     wtemp0	set	126
   645                           
   646                           	psect	config
   647                           
   648                           ;Config register CONFIG @ 0x2007
   649                           ;	Oscillator Selection bits
   650                           ;	FOSC = HS, HS oscillator
   651                           ;	Watchdog Timer Enable bit
   652                           ;	WDTE = OFF, WDT disabled
   653                           ;	Power-up Timer Enable bit
   654                           ;	PWRTE = ON, PWRT enabled
   655                           ;	Brown-out Reset Enable bit
   656                           ;	BOREN = ON, BOR enabled
   657                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   658                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   659                           ;	Data EEPROM Memory Code Protection bit
   660                           ;	CPD = OFF, Data EEPROM code protection off
   661                           ;	Flash Program Memory Write Enable bits
   662                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   663                           ;	In-Circuit Debugger Mode bit
   664                           ;	DEBUG = 0x1, unprogrammed default
   665                           ;	Flash Program Memory Code Protection bit
   666                           ;	CP = OFF, Code protection off
   667     2007                     	org	8199
   668     2007  3FF2               	dw	16370

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printStringLCD@s	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_initLCD
    _main->_printStringLCD
    _printStringLCD->_sendLCD
    _initLCD->_sendLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1579
                            _initLCD
                     _printStringLCD
 ---------------------------------------------------------------------------------
 (1) _printStringLCD                                       2     2      0     851
                                              4 COMMON     2     2      0
                            _sendLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     728
                                              4 COMMON     2     2      0
                            _sendLCD
 ---------------------------------------------------------------------------------
 (2) _sendLCD                                              4     3      1     728
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _sendLCD
   _printStringLCD
     _sendLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 03 14:14:53 2024

                      pc 0002                       l21 0752                       l30 0779  
                     l22 0752                       l27 07FB                       l36 079D  
                     u20 079D                       u21 079C                       u37 07A9  
                     u47 07BC                       u57 07CC                       u67 0765  
                     u77 0771                       fsr 0004                      l640 0761  
                    l642 076A                      l634 0757                      l650 07A1  
                    l644 076D                      l636 075A                      l660 07C1  
                    l652 07A5                      l646 0776                      l638 075C  
                    l670 07E6                      l662 07C8                      l654 07AE  
                    l672 07ED                      l664 07D1                      l656 07B1  
                    l648 079E                      l680 078C                      l674 07F4  
                    l666 07D8                      l658 07B8                      l682 0790  
                    l668 07DF                      l676 077B                      l684 0747  
                    l678 077D                      l686 074C                      fsr0 0004  
                   STR_1 0009                     _main 0747                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088                    _TRISE 0089          __end_of_initLCD 07FC  
        __end_of_sendLCD 077A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0756  
                 ??_main 0076         ??_printStringLCD 0074                ??_initLCD 0074  
              ??_sendLCD 0071  __end_of__initialization 07FC              sendLCD@dato 0073  
         __pcstackCOMMON 0070               __pmaintext 0747               __stringtab 0003  
                __ptext1 077A                  __ptext2 079E                  __ptext3 0756  
                _initLCD 079E                  _sendLCD 0756          printStringLCD@i 0075  
        printStringLCD@s 0074     end_of_initialization 07FC                _PORTEbits 0009  
    start_initialization 07FC                ___latbits 0002                __pstrings 0003  
               ?_initLCD 0070                 ?_sendLCD 0070              __stringbase 0008  
              sendLCD@rs 0070       __end_of__stringtab 0009           _printStringLCD 077A  
 __end_of_printStringLCD 079E                stringcode 0003                 stringdir 0003  
               stringtab 0003          ?_printStringLCD 0070  
