

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 03 14:54:11 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	strings
   172     0003                     __pstrings:
   173     0003                     stringtab:
   174     0003                     __stringtab:
   175     0003                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178     0003                     stringdir:
   179     0003  3000               	movlw	high stringdir
   180     0004  008A               	movwf	10
   181     0005  0804               	movf	4,w
   182     0006  0A84               	incf	4,f
   183     0007  0782               	addwf	2,f
   184     0008                     __stringbase:
   185     0008  3400               	retlw	0
   186     0009                     __end_of__stringtab:
   187     0009                     _columnConfig:
   188     0009  34FE               	retlw	254
   189     000A  34FD               	retlw	253
   190     000B  34FB               	retlw	251
   191     000C                     __end_of_columnConfig:
   192     0005                     _PORTA	set	5
   193     0006                     _PORTB	set	6
   194     0008                     _PORTD	set	8
   195     0009                     _PORTEbits	set	9
   196     0086                     _TRISB	set	134
   197     0089                     _TRISE	set	137
   198     0088                     _TRISD	set	136
   199     0085                     _TRISA	set	133
   200     009F                     _ADCON1	set	159
   201     000C                     STR_15:
   202     000C  3454               	retlw	84	;'T'
   203     000D  3452               	retlw	82	;'R'
   204     000E  3449               	retlw	73	;'I'
   205     000F  3453               	retlw	83	;'S'
   206     0010  3441               	retlw	65	;'A'
   207     0011  3400               	retlw	0
   208     0012                     STR_14:
   209     0012  3454               	retlw	84	;'T'
   210     0013  3452               	retlw	82	;'R'
   211     0014  3449               	retlw	73	;'I'
   212     0015  3453               	retlw	83	;'S'
   213     0016  3442               	retlw	66	;'B'
   214     0017  3400               	retlw	0
   215     0018                     STR_1:
   216     0018  3463               	retlw	99	;'c'
   217     0019  3469               	retlw	105	;'i'
   218     001A  3461               	retlw	97	;'a'
   219     001B  346F               	retlw	111	;'o'
   220     001C  3400               	retlw	0
   221     001D                     STR_13:
   222     001D  3423               	retlw	35	;'#'
   223     001E  3400               	retlw	0
   224     001F                     STR_11:
   225     001F  342A               	retlw	42	;'*'
   226     0020  3400               	retlw	0
   227     0021                     STR_12:
   228     0021  3430               	retlw	48	;'0'
   229     0022  3400               	retlw	0
   230     0023                     STR_2:
   231     0023  3431               	retlw	49	;'1'
   232     0024  3400               	retlw	0
   233     0025                     STR_3:
   234     0025  3432               	retlw	50	;'2'
   235     0026  3400               	retlw	0
   236     0027                     STR_4:
   237     0027  3433               	retlw	51	;'3'
   238     0028  3400               	retlw	0
   239     0029                     STR_5:
   240     0029  3434               	retlw	52	;'4'
   241     002A  3400               	retlw	0
   242     002B                     STR_6:
   243     002B  3435               	retlw	53	;'5'
   244     002C  3400               	retlw	0
   245     002D                     STR_7:
   246     002D  3436               	retlw	54	;'6'
   247     002E  3400               	retlw	0
   248     002F                     STR_8:
   249     002F  3437               	retlw	55	;'7'
   250     0030  3400               	retlw	0
   251     0031                     STR_9:
   252     0031  3438               	retlw	56	;'8'
   253     0032  3400               	retlw	0
   254     0033                     STR_10:
   255     0033  3439               	retlw	57	;'9'
   256     0034  3400               	retlw	0
   257                           
   258                           	psect	cinit
   259     07F8                     start_initialization:	
   260                           ; #config settings
   261                           
   262     07F8                     __initialization:
   263                           
   264                           ; Clear objects allocated to BANK0
   265     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   266     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   267     07FA  01A0               	clrf	__pbssBANK0& (0+127)
   268     07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   269     07FC                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272     07FC                     __end_of__initialization:
   273     07FC  0183               	clrf	3
   274     07FD  120A  118A  2F3F   	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssBANK0
   277     0020                     __pbssBANK0:
   278     0020                     _bottone_premuto:
   279     0020                     	ds	1
   280     0021                     _x:
   281     0021                     	ds	1
   282                           
   283                           	psect	cstackCOMMON
   284     0070                     __pcstackCOMMON:
   285     0070                     ?_initLCD:
   286     0070                     ?_printStringLCD:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     ?_sendLCD:	
   290                           ; 1 bytes @ 0x0
   291                           
   292     0070                     ?_buttonMatrix:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ?_main:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     sendLCD@rs:	
   299                           ; 1 bytes @ 0x0
   300                           
   301                           
   302                           ; 1 bytes @ 0x0
   303     0070                     	ds	1
   304     0071                     ??_sendLCD:
   305                           
   306                           ; 1 bytes @ 0x1
   307     0071                     	ds	2
   308     0073                     sendLCD@dato:
   309                           
   310                           ; 1 bytes @ 0x3
   311     0073                     	ds	1
   312     0074                     ??_initLCD:
   313     0074                     ??_printStringLCD:	
   314                           ; 1 bytes @ 0x4
   315                           
   316     0074                     printStringLCD@i:	
   317                           ; 1 bytes @ 0x4
   318                           
   319                           
   320                           ; 1 bytes @ 0x4
   321     0074                     	ds	1
   322     0075                     printStringLCD@s:
   323                           
   324                           ; 1 bytes @ 0x5
   325     0075                     	ds	1
   326     0076                     ??_buttonMatrix:
   327                           
   328                           ; 1 bytes @ 0x6
   329     0076                     	ds	2
   330     0078                     buttonMatrix@read:
   331                           
   332                           ; 1 bytes @ 0x8
   333     0078                     	ds	1
   334     0079                     buttonMatrix@k:
   335                           
   336                           ; 1 bytes @ 0x9
   337     0079                     	ds	1
   338     007A                     buttonMatrix@col:
   339                           
   340                           ; 1 bytes @ 0xA
   341     007A                     	ds	1
   342     007B                     buttonMatrix@row:
   343                           
   344                           ; 1 bytes @ 0xB
   345     007B                     	ds	1
   346     007C                     ??_main:
   347                           
   348                           ; 1 bytes @ 0xC
   349     007C                     	ds	2
   350                           
   351                           	psect	maintext
   352     073F                     __pmaintext:	
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 54 in file "main.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : B00/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          2       0       0       0       0
   375 ;;      Totals:         2       0       0       0       0
   376 ;;Total ram usage:        2 bytes
   377 ;; Hardware stack levels required when called: 3
   378 ;; This function calls:
   379 ;;		_buttonMatrix
   380 ;;		_initLCD
   381 ;;		_printStringLCD
   382 ;;		_sendLCD
   383 ;; This function is called by:
   384 ;;		Startup code after reset
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388     073F                     _main:	
   389                           ;psect for function _main
   390                           
   391     073F                     l947:	
   392                           ;incstack = 0
   393                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   394                           
   395                           
   396                           ;main.c: 55:     initLCD();
   397     073F  120A  118A  2652  120A  118A  	fcall	_initLCD
   398     0744                     l949:
   399                           
   400                           ;main.c: 57:     printStringLCD("ciao");
   401     0744  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   402     0745  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   403     074A                     l951:
   404                           
   405                           ;main.c: 58:     sendLCD(0xC0, 0);
   406     074A  01F0               	clrf	sendLCD@rs
   407     074B  30C0               	movlw	192
   408     074C  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   409     0751                     l953:
   410                           
   411                           ;main.c: 60:     ADCON1 = 0x06;
   412     0751  3006               	movlw	6
   413     0752  1683               	bsf	3,5	;RP0=1, select bank1
   414     0753  1303               	bcf	3,6	;RP1=0, select bank1
   415     0754  009F               	movwf	31	;volatile
   416     0755                     l955:
   417                           
   418                           ;main.c: 61:     TRISA = 0x20;
   419     0755  3020               	movlw	32
   420     0756  0085               	movwf	5	;volatile
   421     0757                     l957:
   422                           
   423                           ;main.c: 64:         x = buttonMatrix();
   424     0757  120A  118A  26B0  120A  118A  	fcall	_buttonMatrix
   425     075C  1283               	bcf	3,5	;RP0=0, select bank0
   426     075D  1303               	bcf	3,6	;RP1=0, select bank0
   427     075E  00A1               	movwf	_x
   428     075F                     l959:
   429                           
   430                           ;main.c: 65:         if (x == 99) {
   431     075F  3063               	movlw	99
   432     0760  0621               	xorwf	_x,w
   433     0761  1D03               	btfss	3,2
   434     0762  2F64               	goto	u211
   435     0763  2F65               	goto	u210
   436     0764                     u211:
   437     0764  2F67               	goto	l963
   438     0765                     u210:
   439     0765                     l961:
   440                           
   441                           ;main.c: 66:             bottone_premuto = 0;
   442     0765  01A0               	clrf	_bottone_premuto
   443                           
   444                           ;main.c: 67:             continue;
   445     0766  2F57               	goto	l957
   446     0767                     l963:
   447                           
   448                           ;main.c: 69:         TRISD = 0x00;
   449     0767  1683               	bsf	3,5	;RP0=1, select bank1
   450     0768  1303               	bcf	3,6	;RP1=0, select bank1
   451     0769  0188               	clrf	8	;volatile
   452     076A                     l965:
   453                           
   454                           ;main.c: 70:         if (x == 55)
   455     076A  3037               	movlw	55
   456     076B  1283               	bcf	3,5	;RP0=0, select bank0
   457     076C  1303               	bcf	3,6	;RP1=0, select bank0
   458     076D  0621               	xorwf	_x,w
   459     076E  1D03               	btfss	3,2
   460     076F  2F71               	goto	u221
   461     0770  2F72               	goto	u220
   462     0771                     u221:
   463     0771  2FC7               	goto	l995
   464     0772                     u220:
   465     0772  2F57               	goto	l957
   466     0773                     l969:
   467                           
   468                           ;main.c: 75:                 printStringLCD("1");
   469     0773  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   470     0774  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   471                           
   472                           ;main.c: 76:                 break;
   473     0779  2F57               	goto	l957
   474     077A                     l971:
   475                           
   476                           ;main.c: 78:                 printStringLCD("2");
   477     077A  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   478     077B  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   479                           
   480                           ;main.c: 79:                 break;
   481     0780  2F57               	goto	l957
   482     0781                     l973:
   483                           
   484                           ;main.c: 81:                 printStringLCD("3");
   485     0781  301F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   486     0782  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   487                           
   488                           ;main.c: 82:                 break;
   489     0787  2F57               	goto	l957
   490     0788                     l975:
   491                           
   492                           ;main.c: 84:                 printStringLCD("4");
   493     0788  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   494     0789  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   495                           
   496                           ;main.c: 85:                 break;
   497     078E  2F57               	goto	l957
   498     078F                     l977:
   499                           
   500                           ;main.c: 87:                 printStringLCD("5");
   501     078F  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   502     0790  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   503                           
   504                           ;main.c: 88:                 break;
   505     0795  2F57               	goto	l957
   506     0796                     l979:
   507                           
   508                           ;main.c: 90:                 printStringLCD("6");
   509     0796  3025               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   510     0797  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   511                           
   512                           ;main.c: 91:                 break;
   513     079C  2F57               	goto	l957
   514     079D                     l981:
   515                           
   516                           ;main.c: 93:                 printStringLCD("7");
   517     079D  3027               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   518     079E  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   519                           
   520                           ;main.c: 94:                 break;
   521     07A3  2F57               	goto	l957
   522     07A4                     l983:
   523                           
   524                           ;main.c: 96:                 printStringLCD("8");
   525     07A4  3029               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   526     07A5  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   527                           
   528                           ;main.c: 97:                 break;
   529     07AA  2F57               	goto	l957
   530     07AB                     l985:
   531                           
   532                           ;main.c: 99:                 printStringLCD("9");
   533     07AB  302B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   534     07AC  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   535                           
   536                           ;main.c: 100:                 break;
   537     07B1  2F57               	goto	l957
   538     07B2                     l987:
   539                           
   540                           ;main.c: 102:                 printStringLCD("*");
   541     07B2  3017               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   542     07B3  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   543                           
   544                           ;main.c: 103:                 break;
   545     07B8  2F57               	goto	l957
   546     07B9                     l989:
   547                           
   548                           ;main.c: 105:                 printStringLCD("0");
   549     07B9  3019               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
   550     07BA  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   551                           
   552                           ;main.c: 106:                 break;
   553     07BF  2F57               	goto	l957
   554     07C0                     l991:
   555                           
   556                           ;main.c: 108:                 printStringLCD("#");
   557     07C0  3015               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
   558     07C1  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   559                           
   560                           ;main.c: 109:                 break;
   561     07C6  2F57               	goto	l957
   562     07C7                     l995:
   563     07C7  0821               	movf	_x,w
   564     07C8  00FC               	movwf	??_main
   565     07C9  01FD               	clrf	??_main+1
   566                           
   567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   568                           ; Switch size 1, requested type "simple"
   569                           ; Number of cases is 1, Range of values is 0 to 0
   570                           ; switch strategies available:
   571                           ; Name         Instructions Cycles
   572                           ; simple_byte            4     3 (average)
   573                           ; direct_byte           11     8 (fixed)
   574                           ; jumptable            260     6 (fixed)
   575                           ;	Chosen strategy is simple_byte
   576     07CA  087D               	movf	??_main+1,w
   577     07CB  3A00               	xorlw	0	; case 0
   578     07CC  1903               	skipnz
   579     07CD  2FCF               	goto	l1021
   580     07CE  2F57               	goto	l957
   581     07CF                     l1021:
   582                           
   583                           ; Switch size 1, requested type "simple"
   584                           ; Number of cases is 12, Range of values is 0 to 11
   585                           ; switch strategies available:
   586                           ; Name         Instructions Cycles
   587                           ; simple_byte           37    19 (average)
   588                           ; direct_byte           44     8 (fixed)
   589                           ; jumptable            260     6 (fixed)
   590                           ;	Chosen strategy is simple_byte
   591     07CF  087C               	movf	??_main,w
   592     07D0  3A00               	xorlw	0	; case 0
   593     07D1  1903               	skipnz
   594     07D2  2FB2               	goto	l987
   595     07D3  3A01               	xorlw	1	; case 1
   596     07D4  1903               	skipnz
   597     07D5  2F9D               	goto	l981
   598     07D6  3A03               	xorlw	3	; case 2
   599     07D7  1903               	skipnz
   600     07D8  2F88               	goto	l975
   601     07D9  3A01               	xorlw	1	; case 3
   602     07DA  1903               	skipnz
   603     07DB  2F73               	goto	l969
   604     07DC  3A07               	xorlw	7	; case 4
   605     07DD  1903               	skipnz
   606     07DE  2FB9               	goto	l989
   607     07DF  3A01               	xorlw	1	; case 5
   608     07E0  1903               	skipnz
   609     07E1  2FA4               	goto	l983
   610     07E2  3A03               	xorlw	3	; case 6
   611     07E3  1903               	skipnz
   612     07E4  2F8F               	goto	l977
   613     07E5  3A01               	xorlw	1	; case 7
   614     07E6  1903               	skipnz
   615     07E7  2F7A               	goto	l971
   616     07E8  3A0F               	xorlw	15	; case 8
   617     07E9  1903               	skipnz
   618     07EA  2FC0               	goto	l991
   619     07EB  3A01               	xorlw	1	; case 9
   620     07EC  1903               	skipnz
   621     07ED  2FAB               	goto	l985
   622     07EE  3A03               	xorlw	3	; case 10
   623     07EF  1903               	skipnz
   624     07F0  2F96               	goto	l979
   625     07F1  3A01               	xorlw	1	; case 11
   626     07F2  1903               	skipnz
   627     07F3  2F81               	goto	l973
   628     07F4  2F57               	goto	l957
   629     07F5  120A  118A  2800   	ljmp	start
   630     07F8                     __end_of_main:
   631                           
   632                           	psect	text1
   633     0652                     __ptext1:	
   634 ;; *************** function _initLCD *****************
   635 ;; Defined at:
   636 ;;		line 114 in file "main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0
   652 ;;      Temps:          2       0       0       0       0
   653 ;;      Totals:         2       0       0       0       0
   654 ;;Total ram usage:        2 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; Hardware stack levels required when called: 1
   657 ;; This function calls:
   658 ;;		_sendLCD
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664     0652                     _initLCD:	
   665                           ;psect for function _initLCD
   666                           
   667     0652                     l855:	
   668                           ;incstack = 0
   669                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   670                           
   671                           
   672                           ;main.c: 115:     TRISD = 0x00;
   673     0652  1683               	bsf	3,5	;RP0=1, select bank1
   674     0653  1303               	bcf	3,6	;RP1=0, select bank1
   675     0654  0188               	clrf	8	;volatile
   676     0655                     l857:
   677                           
   678                           ;main.c: 116:     TRISE &= ~0x06;
   679     0655  30F9               	movlw	249
   680     0656  00FF               	movwf	btemp+1
   681     0657  087F               	movf	btemp+1,w
   682     0658  0589               	andwf	9,f	;volatile
   683     0659                     l859:
   684                           
   685                           ;main.c: 118:     _delay((unsigned long)((20)*(8000000/4000.0)));
   686     0659  3034               	movlw	52
   687     065A  00F5               	movwf	??_initLCD+1
   688     065B  30F1               	movlw	241
   689     065C  00F4               	movwf	??_initLCD
   690     065D                     u237:
   691     065D  0BF4               	decfsz	??_initLCD,f
   692     065E  2E5D               	goto	u237
   693     065F  0BF5               	decfsz	??_initLCD+1,f
   694     0660  2E5D               	goto	u237
   695     0661  2E62               	nop2
   696     0662                     l861:
   697                           
   698                           ;main.c: 119:     PORTEbits.RE1 = 1;
   699     0662  1283               	bcf	3,5	;RP0=0, select bank0
   700     0663  1303               	bcf	3,6	;RP1=0, select bank0
   701     0664  1489               	bsf	9,1	;volatile
   702     0665                     l863:
   703                           
   704                           ;main.c: 120:     sendLCD(0x38, 0);
   705     0665  01F0               	clrf	sendLCD@rs
   706     0666  3038               	movlw	56
   707     0667  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   708     066C                     l865:
   709                           
   710                           ;main.c: 122:     _delay((unsigned long)((5)*(8000000/4000.0)));
   711     066C  300D               	movlw	13
   712     066D  00F5               	movwf	??_initLCD+1
   713     066E  30FB               	movlw	251
   714     066F  00F4               	movwf	??_initLCD
   715     0670                     u247:
   716     0670  0BF4               	decfsz	??_initLCD,f
   717     0671  2E70               	goto	u247
   718     0672  0BF5               	decfsz	??_initLCD+1,f
   719     0673  2E70               	goto	u247
   720     0674  2E75               	nop2
   721     0675                     l867:
   722                           
   723                           ;main.c: 123:     sendLCD(0x38, 0);
   724     0675  01F0               	clrf	sendLCD@rs
   725     0676  3038               	movlw	56
   726     0677  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   727     067C                     l869:
   728                           
   729                           ;main.c: 125:     _delay((unsigned long)((1)*(8000000/4000.0)));
   730     067C  3003               	movlw	3
   731     067D  00F5               	movwf	??_initLCD+1
   732     067E  3097               	movlw	151
   733     067F  00F4               	movwf	??_initLCD
   734     0680                     u257:
   735     0680  0BF4               	decfsz	??_initLCD,f
   736     0681  2E80               	goto	u257
   737     0682  0BF5               	decfsz	??_initLCD+1,f
   738     0683  2E80               	goto	u257
   739     0684  2E85               	nop2
   740     0685                     l871:
   741                           
   742                           ;main.c: 126:     sendLCD(0x38, 0);
   743     0685  01F0               	clrf	sendLCD@rs
   744     0686  3038               	movlw	56
   745     0687  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   746     068C                     l873:
   747                           
   748                           ;main.c: 128:     sendLCD(0x08, 0);
   749     068C  01F0               	clrf	sendLCD@rs
   750     068D  3008               	movlw	8
   751     068E  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   752     0693                     l875:
   753                           
   754                           ;main.c: 129:     sendLCD(0x0F, 0);
   755     0693  01F0               	clrf	sendLCD@rs
   756     0694  300F               	movlw	15
   757     0695  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   758     069A                     l877:
   759                           
   760                           ;main.c: 130:     sendLCD(0x01, 0);
   761     069A  01F0               	clrf	sendLCD@rs
   762     069B  3001               	movlw	1
   763     069C  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   764     06A1                     l879:
   765                           
   766                           ;main.c: 131:     sendLCD(0x0E, 0);
   767     06A1  01F0               	clrf	sendLCD@rs
   768     06A2  300E               	movlw	14
   769     06A3  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   770     06A8                     l881:
   771                           
   772                           ;main.c: 132:     sendLCD(0x80, 0);
   773     06A8  01F0               	clrf	sendLCD@rs
   774     06A9  3080               	movlw	128
   775     06AA  120A  118A  25FE  120A  118A  	fcall	_sendLCD
   776     06AF                     l61:
   777     06AF  0008               	return
   778     06B0                     __end_of_initLCD:
   779                           
   780                           	psect	text2
   781     06B0                     __ptext2:	
   782 ;; *************** function _buttonMatrix *****************
   783 ;; Defined at:
   784 ;;		line 157 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  row             1   11[COMMON] unsigned char 
   789 ;;  read            1    8[COMMON] unsigned char 
   790 ;;  col             1   10[COMMON] unsigned char 
   791 ;;  k               1    9[COMMON] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      unsigned char 
   794 ;; Registers used:
   795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         4       0       0       0       0
   803 ;;      Temps:          2       0       0       0       0
   804 ;;      Totals:         6       0       0       0       0
   805 ;;Total ram usage:        6 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 2
   808 ;; This function calls:
   809 ;;		_printStringLCD
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815     06B0                     _buttonMatrix:	
   816                           ;psect for function _buttonMatrix
   817                           
   818     06B0                     l883:	
   819                           ;incstack = 0
   820                           ; Regs used in _buttonMatrix: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   821                           
   822                           
   823                           ;main.c: 158:     char k = 99;
   824     06B0  3063               	movlw	99
   825     06B1  00F9               	movwf	buttonMatrix@k
   826                           
   827                           ;main.c: 159:     TRISB = 0x3F;
   828     06B2  303F               	movlw	63
   829     06B3  1683               	bsf	3,5	;RP0=1, select bank1
   830     06B4  1303               	bcf	3,6	;RP1=0, select bank1
   831     06B5  0086               	movwf	6	;volatile
   832     06B6                     l885:
   833                           
   834                           ;main.c: 161:     if (~PORTB & TRISB) {
   835     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   836     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   837     06B8  0906               	comf	6,w	;volatile
   838     06B9  1683               	bsf	3,5	;RP0=1, select bank1
   839     06BA  1303               	bcf	3,6	;RP1=0, select bank1
   840     06BB  0506               	andwf	6,w	;volatile
   841     06BC  1903               	btfsc	3,2
   842     06BD  2EBF               	goto	u141
   843     06BE  2EC0               	goto	u140
   844     06BF                     u141:
   845     06BF  2ED4               	goto	l897
   846     06C0                     u140:
   847     06C0                     l887:
   848                           
   849                           ;main.c: 162:         _delay((unsigned long)((2)*(8000000/4000.0)));
   850     06C0  3006               	movlw	6
   851     06C1  00F7               	movwf	??_buttonMatrix+1
   852     06C2  3030               	movlw	48
   853     06C3  00F6               	movwf	??_buttonMatrix
   854     06C4                     u267:
   855     06C4  0BF6               	decfsz	??_buttonMatrix,f
   856     06C5  2EC4               	goto	u267
   857     06C6  0BF7               	decfsz	??_buttonMatrix+1,f
   858     06C7  2EC4               	goto	u267
   859     06C8  0000               	nop
   860     06C9                     l889:
   861                           
   862                           ;main.c: 164:         TRISD = 0x00;
   863     06C9  1683               	bsf	3,5	;RP0=1, select bank1
   864     06CA  1303               	bcf	3,6	;RP1=0, select bank1
   865     06CB  0188               	clrf	8	;volatile
   866     06CC                     l891:
   867                           
   868                           ;main.c: 165:         printStringLCD("TRISB");
   869     06CC  300A               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
   870     06CD  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   871     06D2                     l893:
   872                           
   873                           ;main.c: 166:         return 55;
   874     06D2  3037               	movlw	55
   875     06D3  2F3E               	goto	l75
   876     06D4                     l897:
   877                           
   878                           ;main.c: 168:     if (~PORTA & TRISA) {
   879     06D4  1283               	bcf	3,5	;RP0=0, select bank0
   880     06D5  1303               	bcf	3,6	;RP1=0, select bank0
   881     06D6  0905               	comf	5,w	;volatile
   882     06D7  1683               	bsf	3,5	;RP0=1, select bank1
   883     06D8  1303               	bcf	3,6	;RP1=0, select bank1
   884     06D9  0505               	andwf	5,w	;volatile
   885     06DA  1903               	btfsc	3,2
   886     06DB  2EDD               	goto	u151
   887     06DC  2EDE               	goto	u150
   888     06DD                     u151:
   889     06DD  2EF1               	goto	l909
   890     06DE                     u150:
   891     06DE                     l899:
   892                           
   893                           ;main.c: 169:         _delay((unsigned long)((2)*(8000000/4000.0)));
   894     06DE  3006               	movlw	6
   895     06DF  00F7               	movwf	??_buttonMatrix+1
   896     06E0  3030               	movlw	48
   897     06E1  00F6               	movwf	??_buttonMatrix
   898     06E2                     u277:
   899     06E2  0BF6               	decfsz	??_buttonMatrix,f
   900     06E3  2EE2               	goto	u277
   901     06E4  0BF7               	decfsz	??_buttonMatrix+1,f
   902     06E5  2EE2               	goto	u277
   903     06E6  0000               	nop
   904     06E7                     l901:
   905                           
   906                           ;main.c: 171:         TRISD = 0x00;
   907     06E7  1683               	bsf	3,5	;RP0=1, select bank1
   908     06E8  1303               	bcf	3,6	;RP1=0, select bank1
   909     06E9  0188               	clrf	8	;volatile
   910     06EA                     l903:
   911                           
   912                           ;main.c: 172:         printStringLCD("TRISA");
   913     06EA  3004               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
   914     06EB  120A  118A  2622  120A  118A  	fcall	_printStringLCD
   915     06F0  2ED2               	goto	l893
   916     06F1                     l909:
   917                           
   918                           ;main.c: 175:     TRISD = 0x0F;
   919     06F1  300F               	movlw	15
   920     06F2  0088               	movwf	8	;volatile
   921     06F3                     l911:
   922                           
   923                           ;main.c: 176:     TRISB &= ~0x07;
   924     06F3  30F8               	movlw	248
   925     06F4  00FF               	movwf	btemp+1
   926     06F5  087F               	movf	btemp+1,w
   927     06F6  0586               	andwf	6,f	;volatile
   928     06F7                     l913:
   929                           
   930                           ;main.c: 178:     for (char col = 0; col < 3; col++) {
   931     06F7  01FA               	clrf	buttonMatrix@col
   932     06F8                     l919:
   933                           
   934                           ;main.c: 180:         PORTB = columnConfig[col];
   935     06F8  087A               	movf	buttonMatrix@col,w
   936     06F9  3E01               	addlw	low ((_columnConfig-__stringbase)| (0+32768))
   937     06FA  0084               	movwf	4
   938     06FB  120A  118A  2003  120A  118A  	fcall	stringdir
   939     0700  1283               	bcf	3,5	;RP0=0, select bank0
   940     0701  1303               	bcf	3,6	;RP1=0, select bank0
   941     0702  0086               	movwf	6	;volatile
   942     0703                     l921:
   943                           
   944                           ;main.c: 181:         _delay((unsigned long)((50)*(8000000/4000000.0)));
   945     0703  3021               	movlw	33
   946     0704  00F6               	movwf	??_buttonMatrix
   947     0705                     u287:
   948     0705  0BF6               	decfsz	??_buttonMatrix,f
   949     0706  2F05               	goto	u287
   950     0707                     l923:
   951                           
   952                           ;main.c: 183:         char read = ~PORTD & TRISD;
   953     0707  1283               	bcf	3,5	;RP0=0, select bank0
   954     0708  1303               	bcf	3,6	;RP1=0, select bank0
   955     0709  0908               	comf	8,w	;volatile
   956     070A  1683               	bsf	3,5	;RP0=1, select bank1
   957     070B  1303               	bcf	3,6	;RP1=0, select bank1
   958     070C  0508               	andwf	8,w	;volatile
   959     070D  00F8               	movwf	buttonMatrix@read
   960     070E                     l925:
   961                           
   962                           ;main.c: 185:         for (char row = 0; row < 4; row++) {
   963     070E  01FB               	clrf	buttonMatrix@row
   964     070F                     l931:
   965                           
   966                           ;main.c: 186:             if (read & (1 << row)) {
   967     070F  3001               	movlw	1
   968     0710  00F6               	movwf	??_buttonMatrix
   969     0711  0A7B               	incf	buttonMatrix@row,w
   970     0712  2F15               	goto	u164
   971     0713                     u165:
   972     0713  1003               	clrc
   973     0714  0DF6               	rlf	??_buttonMatrix,f
   974     0715                     u164:
   975     0715  3EFF               	addlw	-1
   976     0716  1D03               	skipz
   977     0717  2F13               	goto	u165
   978     0718  0876               	movf	??_buttonMatrix,w
   979     0719  0578               	andwf	buttonMatrix@read,w
   980     071A  1903               	btfsc	3,2
   981     071B  2F1D               	goto	u171
   982     071C  2F1E               	goto	u170
   983     071D                     u171:
   984     071D  2F29               	goto	l935
   985     071E                     u170:
   986     071E                     l933:
   987                           
   988                           ;main.c: 187:                 k = row + col * 4;
   989     071E  087A               	movf	buttonMatrix@col,w
   990     071F  00F6               	movwf	??_buttonMatrix
   991     0720  3002               	movlw	2
   992     0721                     u185:
   993     0721  1003               	clrc
   994     0722  0DF6               	rlf	??_buttonMatrix,f
   995     0723  3EFF               	addlw	-1
   996     0724  1D03               	skipz
   997     0725  2F21               	goto	u185
   998     0726  087B               	movf	buttonMatrix@row,w
   999     0727  0776               	addwf	??_buttonMatrix,w
  1000     0728  00F9               	movwf	buttonMatrix@k
  1001     0729                     l935:
  1002                           
  1003                           ;main.c: 189:         }
  1004     0729  3001               	movlw	1
  1005     072A  00FF               	movwf	btemp+1
  1006     072B  087F               	movf	btemp+1,w
  1007     072C  07FB               	addwf	buttonMatrix@row,f
  1008     072D                     l937:
  1009     072D  3004               	movlw	4
  1010     072E  027B               	subwf	buttonMatrix@row,w
  1011     072F  1C03               	skipc
  1012     0730  2F32               	goto	u191
  1013     0731  2F33               	goto	u190
  1014     0732                     u191:
  1015     0732  2F0F               	goto	l931
  1016     0733                     u190:
  1017     0733                     l939:
  1018                           
  1019                           ;main.c: 190:     }
  1020     0733  3001               	movlw	1
  1021     0734  00FF               	movwf	btemp+1
  1022     0735  087F               	movf	btemp+1,w
  1023     0736  07FA               	addwf	buttonMatrix@col,f
  1024     0737                     l941:
  1025     0737  3003               	movlw	3
  1026     0738  027A               	subwf	buttonMatrix@col,w
  1027     0739  1C03               	skipc
  1028     073A  2F3C               	goto	u201
  1029     073B  2F3D               	goto	u200
  1030     073C                     u201:
  1031     073C  2EF8               	goto	l919
  1032     073D                     u200:
  1033     073D                     l943:
  1034                           
  1035                           ;main.c: 191:     return k;
  1036     073D  0879               	movf	buttonMatrix@k,w
  1037     073E                     l75:
  1038     073E  0008               	return
  1039     073F                     __end_of_buttonMatrix:
  1040                           
  1041                           	psect	text3
  1042     0622                     __ptext3:	
  1043 ;; *************** function _printStringLCD *****************
  1044 ;; Defined at:
  1045 ;;		line 147 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  s               1    wreg     PTR unsigned char 
  1048 ;;		 -> STR_15(6), STR_14(6), STR_13(2), STR_12(2), 
  1049 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  1050 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1051 ;;		 -> STR_3(2), STR_2(2), STR_1(5), 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  s               1    5[COMMON] PTR unsigned char 
  1054 ;;		 -> STR_15(6), STR_14(6), STR_13(2), STR_12(2), 
  1055 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  1056 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1057 ;;		 -> STR_3(2), STR_2(2), STR_1(5), 
  1058 ;;  i               1    4[COMMON] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         2       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0
  1071 ;;      Totals:         2       0       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 1
  1075 ;; This function calls:
  1076 ;;		_sendLCD
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;;		_buttonMatrix
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083     0622                     _printStringLCD:	
  1084                           ;psect for function _printStringLCD
  1085                           
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _printStringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1089                           ;printStringLCD@s stored from wreg
  1090     0622  00F5               	movwf	printStringLCD@s
  1091     0623                     l843:
  1092                           
  1093                           ;main.c: 148:     if (bottone_premuto)
  1094     0623  1283               	bcf	3,5	;RP0=0, select bank0
  1095     0624  1303               	bcf	3,6	;RP1=0, select bank0
  1096     0625  0820               	movf	_bottone_premuto,w
  1097     0626  1903               	btfsc	3,2
  1098     0627  2E29               	goto	u121
  1099     0628  2E2A               	goto	u120
  1100     0629                     u121:
  1101     0629  2E2B               	goto	l847
  1102     062A                     u120:
  1103     062A  2E51               	goto	l68
  1104     062B                     l847:
  1105                           
  1106                           ;main.c: 150:     char i = 0;
  1107     062B  01F4               	clrf	printStringLCD@i
  1108                           
  1109                           ;main.c: 151:     while (s[i] != '\0') {
  1110     062C  2E40               	goto	l853
  1111     062D                     l849:
  1112                           
  1113                           ;main.c: 152:         sendLCD(s[i++], 1);
  1114     062D  01F0               	clrf	sendLCD@rs
  1115     062E  0AF0               	incf	sendLCD@rs,f
  1116     062F  0874               	movf	printStringLCD@i,w
  1117     0630  0775               	addwf	printStringLCD@s,w
  1118     0631  0084               	movwf	4
  1119     0632  120A  118A  2003  120A  118A  	fcall	stringdir
  1120     0637  120A  118A  25FE  120A  118A  	fcall	_sendLCD
  1121     063C                     l851:
  1122     063C  3001               	movlw	1
  1123     063D  00FF               	movwf	btemp+1
  1124     063E  087F               	movf	btemp+1,w
  1125     063F  07F4               	addwf	printStringLCD@i,f
  1126     0640                     l853:
  1127                           
  1128                           ;main.c: 151:     while (s[i] != '\0') {
  1129     0640  0874               	movf	printStringLCD@i,w
  1130     0641  0775               	addwf	printStringLCD@s,w
  1131     0642  0084               	movwf	4
  1132     0643  120A  118A  2003  120A  118A  	fcall	stringdir
  1133     0648  3A00               	xorlw	0
  1134     0649  1D03               	skipz
  1135     064A  2E4C               	goto	u131
  1136     064B  2E4D               	goto	u130
  1137     064C                     u131:
  1138     064C  2E2D               	goto	l849
  1139     064D                     u130:
  1140     064D                     l71:
  1141                           
  1142                           ;main.c: 154:     bottone_premuto = 1;
  1143     064D  1283               	bcf	3,5	;RP0=0, select bank0
  1144     064E  1303               	bcf	3,6	;RP1=0, select bank0
  1145     064F  01A0               	clrf	_bottone_premuto
  1146     0650  0AA0               	incf	_bottone_premuto,f
  1147     0651                     l68:
  1148     0651  0008               	return
  1149     0652                     __end_of_printStringLCD:
  1150                           
  1151                           	psect	text4
  1152     05FE                     __ptext4:	
  1153 ;; *************** function _sendLCD *****************
  1154 ;; Defined at:
  1155 ;;		line 135 in file "main.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  dato            1    wreg     unsigned char 
  1158 ;;  rs              1    0[COMMON] unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  dato            1    3[COMMON] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         1       0       0       0       0
  1171 ;;      Locals:         1       0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0
  1173 ;;      Totals:         4       0       0       0       0
  1174 ;;Total ram usage:        4 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;;		_initLCD
  1181 ;;		_printStringLCD
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185     05FE                     _sendLCD:	
  1186                           ;psect for function _sendLCD
  1187                           
  1188                           
  1189                           ;incstack = 0
  1190                           ; Regs used in _sendLCD: [wreg+status,0]
  1191                           ;sendLCD@dato stored from wreg
  1192     05FE  00F3               	movwf	sendLCD@dato
  1193     05FF                     l829:
  1194                           
  1195                           ;main.c: 136:     PORTEbits.RE1 = 1;
  1196     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1197     0600  1303               	bcf	3,6	;RP1=0, select bank0
  1198     0601  1489               	bsf	9,1	;volatile
  1199     0602                     l831:
  1200                           
  1201                           ;main.c: 137:     PORTD = dato;
  1202     0602  0873               	movf	sendLCD@dato,w
  1203     0603  0088               	movwf	8	;volatile
  1204     0604                     l833:
  1205                           
  1206                           ;main.c: 138:     PORTEbits.RE2 = rs;
  1207     0604  0C70               	rrf	sendLCD@rs,w
  1208     0605  1C03               	skipc
  1209     0606  1109               	bcf	9,2	;volatile
  1210     0607  1803               	skipnc
  1211     0608  1509               	bsf	9,2	;volatile
  1212     0609                     l835:
  1213                           
  1214                           ;main.c: 139:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1215     0609  3008               	movlw	8
  1216     060A  00F2               	movwf	??_sendLCD+1
  1217     060B  30C9               	movlw	201
  1218     060C  00F1               	movwf	??_sendLCD
  1219     060D                     u297:
  1220     060D  0BF1               	decfsz	??_sendLCD,f
  1221     060E  2E0D               	goto	u297
  1222     060F  0BF2               	decfsz	??_sendLCD+1,f
  1223     0610  2E0D               	goto	u297
  1224     0611  2E12               	nop2
  1225     0612                     l837:
  1226                           
  1227                           ;main.c: 141:     PORTEbits.RE1 = 0;
  1228     0612  1283               	bcf	3,5	;RP0=0, select bank0
  1229     0613  1303               	bcf	3,6	;RP1=0, select bank0
  1230     0614  1089               	bcf	9,1	;volatile
  1231     0615                     l839:
  1232                           
  1233                           ;main.c: 142:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1234     0615  3008               	movlw	8
  1235     0616  00F2               	movwf	??_sendLCD+1
  1236     0617  30C9               	movlw	201
  1237     0618  00F1               	movwf	??_sendLCD
  1238     0619                     u307:
  1239     0619  0BF1               	decfsz	??_sendLCD,f
  1240     061A  2E19               	goto	u307
  1241     061B  0BF2               	decfsz	??_sendLCD+1,f
  1242     061C  2E19               	goto	u307
  1243     061D  2E1E               	nop2
  1244     061E                     l841:
  1245                           
  1246                           ;main.c: 144:     PORTEbits.RE1 = 1;
  1247     061E  1283               	bcf	3,5	;RP0=0, select bank0
  1248     061F  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0620  1489               	bsf	9,1	;volatile
  1250     0621                     l64:
  1251     0621  0008               	return
  1252     0622                     __end_of_sendLCD:
  1253     007E                     btemp	set	126	;btemp
  1254     007E                     wtemp0	set	126
  1255                           
  1256                           	psect	config
  1257                           
  1258                           ;Config register CONFIG @ 0x2007
  1259                           ;	Oscillator Selection bits
  1260                           ;	FOSC = HS, HS oscillator
  1261                           ;	Watchdog Timer Enable bit
  1262                           ;	WDTE = OFF, WDT disabled
  1263                           ;	Power-up Timer Enable bit
  1264                           ;	PWRTE = ON, PWRT enabled
  1265                           ;	Brown-out Reset Enable bit
  1266                           ;	BOREN = ON, BOR enabled
  1267                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1268                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1269                           ;	Data EEPROM Memory Code Protection bit
  1270                           ;	CPD = OFF, Data EEPROM code protection off
  1271                           ;	Flash Program Memory Write Enable bits
  1272                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1273                           ;	In-Circuit Debugger Mode bit
  1274                           ;	DEBUG = 0x1, unprogrammed default
  1275                           ;	Flash Program Memory Code Protection bit
  1276                           ;	CP = OFF, Code protection off
  1277     2007                     	org	8199
  1278     2007  3FF2               	dw	16370

Data Sizes:
    Strings     41
    Constant    3
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printStringLCD@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[5]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[6]), STR_15(CODE[6]), STR_2(CODE[2]), 
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), 
		 -> STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_buttonMatrix
    _initLCD->_sendLCD
    _buttonMatrix->_printStringLCD
    _printStringLCD->_sendLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4613
                                             12 COMMON     2     2      0
                       _buttonMatrix
                            _initLCD
                     _printStringLCD
                            _sendLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     804
                                              4 COMMON     2     2      0
                            _sendLCD
 ---------------------------------------------------------------------------------
 (1) _buttonMatrix                                         6     6      0    1616
                                              6 COMMON     6     6      0
                     _printStringLCD
 ---------------------------------------------------------------------------------
 (1) _printStringLCD                                       2     2      0    1389
                                              4 COMMON     2     2      0
                            _sendLCD
 ---------------------------------------------------------------------------------
 (1) _sendLCD                                              4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonMatrix
     _printStringLCD
       _sendLCD
   _initLCD
     _sendLCD
   _printStringLCD
   _sendLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 03 14:54:11 2024

                      _x 0021                        pc 0002                       l61 06AF  
                     l71 064D                       l64 0621                       l75 073E  
                     l68 0651                       fsr 0004                      l901 06E7  
                    l831 0602                      l911 06F3                      l903 06EA  
                    l841 061E                      l833 0604                      l921 0703  
                    l913 06F7                      l835 0609                      l851 063C  
                    l843 0623                      l931 070F                      l923 0707  
                    l837 0612                      l829 05FF                      l853 0640  
                    l941 0737                      l933 071E                      l925 070E  
                    l909 06F1                      l861 0662                      l839 0615  
                    l847 062B                      l943 073D                      l935 0729  
                    l919 06F8                      l871 0685                      l863 0665  
                    l855 0652                      l951 074A                      l849 062D  
                    l937 072D                      l881 06A8                      l873 068C  
                    l865 066C                      l857 0655                      l961 0765  
                    l953 0751                      l939 0733                      l891 06CC  
                    l883 06B0                      l875 0693                      l867 0675  
                    l859 0659                      l971 077A                      l963 0767  
                    l955 0755                      l947 073F                      l893 06D2  
                    l885 06B6                      l877 069A                      l869 067C  
                    l981 079D                      l973 0781                      l965 076A  
                    l957 0757                      l949 0744                      l887 06C0  
                    l879 06A1                      l991 07C0                      l983 07A4  
                    l975 0788                      l959 075F                      l889 06C9  
                    l897 06D4                      l985 07AB                      l977 078F  
                    l969 0773                      l899 06DE                      l987 07B2  
                    l979 0796                      l995 07C7                      l989 07B9  
                    u120 062A                      u200 073D                      u121 0629  
                    u201 073C                      u130 064D                      u210 0765  
                    u131 064C                      u211 0764                      u140 06C0  
                    u220 0772                      u141 06BF                      u221 0771  
                    u150 06DE                      u151 06DD                      u170 071E  
                    u307 0619                      u171 071D                      u164 0715  
                    u165 0713                      u237 065D                      u190 0733  
                    u191 0732                      u247 0670                      u185 0721  
                    u257 0680                      u267 06C4                      u277 06E2  
                    u287 0705                      u297 060D                      fsr0 0004  
                   l1021 07CF                     STR_1 0018                     STR_2 0023  
                   STR_3 0025                     STR_4 0027                     STR_5 0029  
                   STR_6 002B                     STR_7 002D                     STR_8 002F  
                   STR_9 0031                     _main 073F                     btemp 007E  
                   start 0000                    ?_main 0070                    STR_10 0033  
                  STR_11 001F                    STR_12 0021                    STR_13 001D  
                  STR_14 0012                    STR_15 000C                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
        __end_of_initLCD 06B0          __end_of_sendLCD 0622                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 007C                   _ADCON1 009F  
          ?_buttonMatrix 0070         ??_printStringLCD 0074                ??_initLCD 0074  
              ??_sendLCD 0071           ??_buttonMatrix 0076  __end_of__initialization 07FC  
            sendLCD@dato 0073           __pcstackCOMMON 0070     __end_of_columnConfig 000C  
             __pbssBANK0 0020               __pmaintext 073F               __stringtab 0003  
   __end_of_buttonMatrix 073F                  __ptext1 0652                  __ptext2 06B0  
                __ptext3 0622                  __ptext4 05FE                  _initLCD 0652  
                _sendLCD 05FE          printStringLCD@i 0074          printStringLCD@s 0075  
   end_of_initialization 07FC                _PORTEbits 0009          _bottone_premuto 0020  
        buttonMatrix@col 007A          buttonMatrix@row 007B             _columnConfig 0009  
    start_initialization 07F8                ___latbits 0002             _buttonMatrix 06B0  
              __pstrings 0003                 ?_initLCD 0070                 ?_sendLCD 0070  
            __stringbase 0008                sendLCD@rs 0070       __end_of__stringtab 0009  
         _printStringLCD 0622            buttonMatrix@k 0079   __end_of_printStringLCD 0652  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
        ?_printStringLCD 0070         buttonMatrix@read 0078  
