

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 08 16:34:10 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F628A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0015                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001F                     	;# 
    74     0081                     	;# 
    75     0085                     	;# 
    76     0086                     	;# 
    77     008C                     	;# 
    78     008E                     	;# 
    79     0092                     	;# 
    80     0098                     	;# 
    81     0099                     	;# 
    82     009A                     	;# 
    83     009B                     	;# 
    84     009C                     	;# 
    85     009D                     	;# 
    86     009F                     	;# 
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     008C                     	;# 
   115     008E                     	;# 
   116     0092                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009F                     	;# 
   124                           
   125                           	psect	strings
   126     00B0                     __pstrings:
   127     00B0                     stringtab:
   128     00B0                     __stringtab:
   129     00B0                     stringcode:	
   130                           ;	String table - string pointers are 1 byte each
   131                           
   132     00B0                     stringdir:
   133     00B0  3000               	movlw	high stringdir
   134     00B1  008A               	movwf	10
   135     00B2  0804               	movf	4,w
   136     00B3  0A84               	incf	4,f
   137     00B4  0782               	addwf	2,f
   138     00B5                     __stringbase:
   139     00B5  3400               	retlw	0
   140     00B6                     __end_of__stringtab:
   141     00B6                     _tempi_timer:
   142     00B6  34F4               	retlw	244
   143     00B7  3401               	retlw	1
   144     00B8  34E8               	retlw	232
   145     00B9  3403               	retlw	3
   146     00BA  34D0               	retlw	208
   147     00BB  3407               	retlw	7
   148     00BC  34A0               	retlw	160
   149     00BD  340F               	retlw	15
   150     00BE                     __end_of_tempi_timer:
   151     0005                     _PORTA	set	5
   152     0006                     _PORTB	set	6
   153     0001                     _TMR0	set	1
   154     000B                     _INTCON	set	11
   155     005A                     _T0IF	set	90
   156     0081                     _OPTION_REG	set	129
   157     0085                     _TRISA	set	133
   158     0086                     _TRISB	set	134
   159                           
   160                           	psect	cinit
   161     000F                     start_initialization:	
   162                           ; #config settings
   163                           
   164     000F                     __initialization:
   165                           
   166                           ; Clear objects allocated to COMMON
   167     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   168     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   169     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   170     0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   171     0013  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   172     0014  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   173     0015                     end_of_initialization:	
   174                           ;End of C runtime variable initialization code
   175                           
   176     0015                     __end_of__initialization:
   177     0015  0183               	clrf	3
   178     0016  28A0               	ljmp	_main	;jump to C main() function
   179                           
   180                           	psect	bssCOMMON
   181     0078                     __pbssCOMMON:
   182     0078                     _index:
   183     0078                     	ds	2
   184     007A                     _conta_interrupt:
   185     007A                     	ds	2
   186     007C                     _oldread:
   187     007C                     	ds	1
   188     007D                     _acceso_spento:
   189     007D                     	ds	1
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_Bottone_premuto:
   194     0070                     ?_main:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ?_ISR:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ??_ISR:	
   201                           ; 1 bytes @ 0x0
   202                           
   203                           
   204                           ; 1 bytes @ 0x0
   205     0070                     	ds	8
   206                           
   207                           	psect	cstackBANK0
   208     0020                     __pcstackBANK0:
   209     0020                     ??_Bottone_premuto:
   210                           
   211                           ; 1 bytes @ 0x0
   212     0020                     	ds	2
   213     0022                     ??_main:
   214                           
   215                           	psect	maintext
   216     00A0                     __pmaintext:	
   217                           ; 1 bytes @ 0x2
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 30 in file "newmain.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   237 ;;      Params:         0       0       0       0
   238 ;;      Locals:         0       0       0       0
   239 ;;      Temps:          0       0       0       0
   240 ;;      Totals:         0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 3
   243 ;; This function calls:
   244 ;;		_Bottone_premuto
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250     00A0                     _main:	
   251                           ;psect for function _main
   252                           
   253     00A0                     l663:	
   254                           ;incstack = 0
   255                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   256                           
   257                           
   258                           ;newmain.c: 32:             acceso_spento = !acceso_spento;
   259     00A0  1683               	bsf	3,5	;RP0=1, select bank1
   260     00A1  1303               	bcf	3,6	;RP1=0, select bank1
   261     00A2  0186               	clrf	6	;volatile
   262     00A3                     l665:
   263                           
   264                           ;newmain.c: 33: 
   265     00A3  301E               	movlw	30
   266     00A4  0085               	movwf	5	;volatile
   267     00A5                     l667:
   268                           
   269                           ;newmain.c: 34:             if (acceso_spento)
   270     00A5  30A0               	movlw	160
   271     00A6  008B               	movwf	11	;volatile
   272     00A7                     l669:
   273                           
   274                           ;newmain.c: 35:                 PORTB = 0x01;
   275     00A7  3002               	movlw	2
   276     00A8  0081               	movwf	1	;volatile
   277     00A9                     l671:
   278                           
   279                           ;newmain.c: 37:                 PORTB = 0x00;
   280     00A9  3006               	movlw	6
   281     00AA  1283               	bcf	3,5	;RP0=0, select bank0
   282     00AB  1303               	bcf	3,6	;RP1=0, select bank0
   283     00AC  0081               	movwf	1	;volatile
   284     00AD                     l673:
   285                           
   286                           ;newmain.c: 40:         }
   287     00AD  205F               	fcall	_Bottone_premuto
   288     00AE  28AD               	goto	l673
   289     00AF  280E               	ljmp	start
   290     00B0                     __end_of_main:
   291                           
   292                           	psect	text1
   293     005F                     __ptext1:	
   294 ;; *************** function _Bottone_premuto *****************
   295 ;; Defined at:
   296 ;;		line 65 in file "newmain.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, btemp+1
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   310 ;;      Params:         0       0       0       0
   311 ;;      Locals:         0       0       0       0
   312 ;;      Temps:          0       2       0       0
   313 ;;      Totals:         0       2       0       0
   314 ;;Total ram usage:        2 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; Hardware stack levels required when called: 2
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     005F                     _Bottone_premuto:	
   325                           ;psect for function _Bottone_premuto
   326                           
   327     005F                     l643:	
   328                           ;incstack = 0
   329                           ; Regs used in _Bottone_premuto: [wreg+status,2+status,0+btemp+1]
   330                           
   331     005F  1283               	bcf	3,5	;RP0=0, select bank0
   332     0060  1303               	bcf	3,6	;RP1=0, select bank0
   333     0061  0905               	comf	5,w	;volatile
   334     0062  3902               	andlw	2
   335     0063  1903               	btfsc	3,2
   336     0064  2866               	goto	u111
   337     0065  2867               	goto	u110
   338     0066                     u111:
   339     0066  289A               	goto	l661
   340     0067                     u110:
   341     0067                     l645:
   342     0067  087C               	movf	_oldread,w
   343     0068  1D03               	btfss	3,2
   344     0069  286B               	goto	u121
   345     006A  286C               	goto	u120
   346     006B                     u121:
   347     006B  289A               	goto	l661
   348     006C                     u120:
   349     006C                     l647:
   350     006C  301A               	movlw	26
   351     006D  1283               	bcf	3,5	;RP0=0, select bank0
   352     006E  1303               	bcf	3,6	;RP1=0, select bank0
   353     006F  00A1               	movwf	??_Bottone_premuto+1
   354     0070  30F8               	movlw	248
   355     0071  00A0               	movwf	??_Bottone_premuto
   356     0072                     u217:
   357     0072  0BA0               	decfsz	??_Bottone_premuto,f
   358     0073  2872               	goto	u217
   359     0074  0BA1               	decfsz	??_Bottone_premuto+1,f
   360     0075  2872               	goto	u217
   361     0076                     l649:
   362     0076  1283               	bcf	3,5	;RP0=0, select bank0
   363     0077  1303               	bcf	3,6	;RP1=0, select bank0
   364     0078  0905               	comf	5,w	;volatile
   365     0079  3902               	andlw	2
   366     007A  1903               	btfsc	3,2
   367     007B  287D               	goto	u131
   368     007C  287E               	goto	u130
   369     007D                     u131:
   370     007D  289A               	goto	l661
   371     007E                     u130:
   372     007E                     l651:
   373     007E  087C               	movf	_oldread,w
   374     007F  1D03               	btfss	3,2
   375     0080  2882               	goto	u141
   376     0081  2883               	goto	u140
   377     0082                     u141:
   378     0082  289A               	goto	l661
   379     0083                     u140:
   380     0083                     l653:
   381     0083  3001               	movlw	1
   382     0084  07F8               	addwf	_index,f
   383     0085  1803               	skipnc
   384     0086  0AF9               	incf	_index+1,f
   385     0087  3000               	movlw	0
   386     0088  07F9               	addwf	_index+1,f
   387     0089                     l655:
   388     0089  01FA               	clrf	_conta_interrupt
   389     008A  01FB               	clrf	_conta_interrupt+1
   390     008B                     l657:
   391     008B  0879               	movf	_index+1,w
   392     008C  3A80               	xorlw	128
   393     008D  00FF               	movwf	btemp+1
   394     008E  3080               	movlw	128
   395     008F  027F               	subwf	btemp+1,w
   396     0090  1D03               	skipz
   397     0091  2894               	goto	u155
   398     0092  3004               	movlw	4
   399     0093  0278               	subwf	_index,w
   400     0094                     u155:
   401     0094  1C03               	skipc
   402     0095  2897               	goto	u151
   403     0096  2898               	goto	u150
   404     0097                     u151:
   405     0097  289A               	goto	l661
   406     0098                     u150:
   407     0098                     l659:
   408     0098  01F8               	clrf	_index
   409     0099  01F9               	clrf	_index+1
   410     009A                     l661:
   411     009A  1283               	bcf	3,5	;RP0=0, select bank0
   412     009B  1303               	bcf	3,6	;RP1=0, select bank0
   413     009C  0905               	comf	5,w	;volatile
   414     009D  3902               	andlw	2
   415     009E  00FC               	movwf	_oldread
   416     009F                     l53:
   417     009F  0008               	return
   418     00A0                     __end_of_Bottone_premuto:
   419                           
   420                           	psect	text2
   421     0017                     __ptext2:	
   422 ;; *************** function _ISR *****************
   423 ;; Defined at:
   424 ;;		line 43 in file "newmain.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   438 ;;      Params:         0       0       0       0
   439 ;;      Locals:         0       0       0       0
   440 ;;      Temps:          8       0       0       0
   441 ;;      Totals:         8       0       0       0
   442 ;;Total ram usage:        8 bytes
   443 ;; Hardware stack levels used: 2
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		Interrupt level 1
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451     0017                     _ISR:	
   452                           ;psect for function _ISR
   453                           
   454     0017                     i1l675:
   455                           
   456                           ;newmain.c: 45: void Bottone_premuto() {
   457     0017  1D0B               	btfss	11,2	;volatile
   458     0018  281A               	goto	u16_21
   459     0019  281B               	goto	u16_20
   460     001A                     u16_21:
   461     001A  2854               	goto	i1l47
   462     001B                     u16_20:
   463     001B                     i1l677:
   464                           
   465                           ;newmain.c: 46: 
   466     001B  110B               	bcf	11,2	;volatile
   467     001C                     i1l679:
   468                           
   469                           ;newmain.c: 47:     if (~PORTA & 0x02 && !oldread) {
   470     001C  3006               	movlw	6
   471     001D  1283               	bcf	3,5	;RP0=0, select bank0
   472     001E  1303               	bcf	3,6	;RP1=0, select bank0
   473     001F  0081               	movwf	1	;volatile
   474                           
   475                           ;newmain.c: 49: 
   476     0020  3001               	movlw	1
   477     0021  07FA               	addwf	_conta_interrupt,f
   478     0022  1803               	skipnc
   479     0023  0AFB               	incf	_conta_interrupt+1,f
   480     0024  3000               	movlw	0
   481     0025  07FB               	addwf	_conta_interrupt+1,f
   482     0026                     i1l681:
   483                           
   484                           ;newmain.c: 51:             index++;
   485     0026  0878               	movf	_index,w
   486     0027  00F0               	movwf	??_ISR
   487     0028  0770               	addwf	??_ISR,w
   488     0029  3E01               	addlw	low ((_tempi_timer-__stringbase)| (0+32768))
   489     002A  0084               	movwf	4
   490     002B  20B0               	fcall	stringdir
   491     002C  00F1               	movwf	??_ISR+1
   492     002D  20B0               	fcall	stringdir
   493     002E  00F2               	movwf	??_ISR+2
   494     002F  087B               	movf	_conta_interrupt+1,w
   495     0030  3A80               	xorlw	128
   496     0031  00F3               	movwf	??_ISR+3
   497     0032  0872               	movf	??_ISR+2,w
   498     0033  3A80               	xorlw	128
   499     0034  0273               	subwf	??_ISR+3,w
   500     0035  1D03               	skipz
   501     0036  2839               	goto	u17_25
   502     0037  0871               	movf	??_ISR+1,w
   503     0038  027A               	subwf	_conta_interrupt,w
   504     0039                     u17_25:
   505     0039  1C03               	skipc
   506     003A  283C               	goto	u17_21
   507     003B  283D               	goto	u17_20
   508     003C                     u17_21:
   509     003C  2854               	goto	i1l47
   510     003D                     u17_20:
   511     003D                     i1l683:
   512                           
   513                           ;newmain.c: 52:             conta_interrupt = 0;
   514     003D  087D               	movf	_acceso_spento,w
   515     003E  1903               	btfsc	3,2
   516     003F  2841               	goto	u18_21
   517     0040  2843               	goto	u18_20
   518     0041                     u18_21:
   519     0041  3001               	movlw	1
   520     0042  2844               	goto	u19_20
   521     0043                     u18_20:
   522     0043  3000               	movlw	0
   523     0044                     u19_20:
   524     0044  00FD               	movwf	_acceso_spento
   525                           
   526                           ;newmain.c: 54:             if (index >= 4)
   527     0045  087D               	movf	_acceso_spento,w
   528     0046  1903               	btfsc	3,2
   529     0047  2849               	goto	u20_21
   530     0048  284A               	goto	u20_20
   531     0049                     u20_21:
   532     0049  284F               	goto	i1l687
   533     004A                     u20_20:
   534     004A                     i1l685:
   535                           
   536                           ;newmain.c: 55:                 index = 0;
   537     004A  3001               	movlw	1
   538     004B  1283               	bcf	3,5	;RP0=0, select bank0
   539     004C  1303               	bcf	3,6	;RP1=0, select bank0
   540     004D  0086               	movwf	6	;volatile
   541     004E  2852               	goto	i1l46
   542     004F                     i1l687:
   543                           
   544                           ;newmain.c: 57: 
   545     004F  1283               	bcf	3,5	;RP0=0, select bank0
   546     0050  1303               	bcf	3,6	;RP1=0, select bank0
   547     0051  0186               	clrf	6	;volatile
   548     0052                     i1l46:
   549                           
   550                           ;newmain.c: 59: 
   551     0052  01FA               	clrf	_conta_interrupt
   552     0053  01FB               	clrf	_conta_interrupt+1
   553     0054                     i1l47:
   554     0054  0877               	movf	??_ISR+7,w
   555     0055  00FF               	movwf	btemp+1
   556     0056  0876               	movf	??_ISR+6,w
   557     0057  008A               	movwf	10
   558     0058  0875               	movf	??_ISR+5,w
   559     0059  0084               	movwf	4
   560     005A  0E74               	swapf	??_ISR+4,w
   561     005B  0083               	movwf	3
   562     005C  0EFE               	swapf	btemp,f
   563     005D  0E7E               	swapf	btemp,w
   564     005E  0009               	retfie
   565     005F                     __end_of_ISR:
   566     007E                     btemp	set	126	;btemp
   567     007E                     wtemp0	set	126
   568                           
   569                           	psect	intentry
   570     0004                     __pintentry:	
   571                           ;incstack = 0
   572                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   573                           
   574     0004                     interrupt_function:
   575     007E                     saved_w	set	btemp
   576     0004  00FE               	movwf	btemp
   577     0005  0E03               	swapf	3,w
   578     0006  00F4               	movwf	??_ISR+4
   579     0007  0804               	movf	4,w
   580     0008  00F5               	movwf	??_ISR+5
   581     0009  080A               	movf	10,w
   582     000A  00F6               	movwf	??_ISR+6
   583     000B  087F               	movf	btemp+1,w
   584     000C  00F7               	movwf	??_ISR+7
   585     000D  2817               	ljmp	_ISR
   586                           
   587                           	psect	config
   588                           
   589                           ;Config register CONFIG @ 0x2007
   590                           ;	Oscillator Selection bits
   591                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   592                           ;	Watchdog Timer Enable bit
   593                           ;	WDTE = OFF, WDT disabled
   594                           ;	Power-up Timer Enable bit
   595                           ;	PWRTE = ON, PWRT enabled
   596                           ;	RA5/MCLR/VPP Pin Function Select bit
   597                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   598                           ;	Brown-out Detect Enable bit
   599                           ;	BOREN = ON, BOD enabled
   600                           ;	Low-Voltage Programming Enable bit
   601                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   602                           ;	Data EE Memory Code Protection bit
   603                           ;	CPD = OFF, Data memory code protection off
   604                           ;	Flash Program Memory Code Protection bit
   605                           ;	CP = OFF, Code protection off
   606     2007                     	org	8199
   607     2007  3F62               	dw	16226

Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Bottone_premuto

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _Bottone_premuto
 ---------------------------------------------------------------------------------
 (1) _Bottone_premuto                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bottone_premuto

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      2       2       3        2.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      10      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 08 16:34:10 2023

                      pc 0002                       l53 009F                       fsr 0004  
                    l651 007E                      l643 005F                      l653 0083  
                    l645 0067                      l661 009A                      l655 0089  
                    l647 006C                      l671 00A9                      l663 00A0  
                    l657 008B                      l649 0076                      l673 00AD  
                    l665 00A3                      l659 0098                      l667 00A5  
                    l669 00A7                      u110 0067                      u111 0066  
                    u120 006C                      u121 006B                      u130 007E  
                    u131 007D                      u140 0083                      u141 0082  
                    u150 0098                      u151 0097                      u217 0072  
                    u155 0094                      _ISR 0017                      fsr0 0004  
        _conta_interrupt 007A                     ?_ISR 0070                     _T0IF 005A  
                   i1l46 0052                     i1l47 0054                     _TMR0 0001  
                   _main 00A0                     btemp 007E                     start 000E  
                  ??_ISR 0070         ?_Bottone_premuto 0070                    ?_main 0070  
                  i1l681 0026                    i1l683 003D                    i1l675 0017  
                  i1l685 004A                    i1l677 001B                    i1l687 004F  
                  i1l679 001C                    u20_20 004A                    u20_21 0049  
                  u16_20 001B                    u16_21 001A                    u17_20 003D  
                  u17_21 003C                    u17_25 0039                    u18_20 0043  
                  u18_21 0041                    u19_20 0044                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _index 0078                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00B0  
                 ??_main 0022                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0015            _acceso_spento 007D           __pcstackCOMMON 0070  
             __pmaintext 00A0               __pintentry 0004               __stringtab 00B0  
                __ptext1 005F                  __ptext2 0017                  _oldread 007C  
   end_of_initialization 0015      start_initialization 000F              __end_of_ISR 005F  
      ??_Bottone_premuto 0020              __pbssCOMMON 0078                ___latbits 0000  
          __pcstackBANK0 0020                __pstrings 00B0        interrupt_function 0004  
            __stringbase 00B5       __end_of__stringtab 00B6          _Bottone_premuto 005F  
    __end_of_tempi_timer 00BE                 intlevel1 0000                stringcode 00B0  
__end_of_Bottone_premuto 00A0              _tempi_timer 00B6               _OPTION_REG 0081  
               stringdir 00B0                 stringtab 00B0  
