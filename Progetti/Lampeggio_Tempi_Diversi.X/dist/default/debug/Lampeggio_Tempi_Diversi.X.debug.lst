

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 08 15:43:33 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F628A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000E                     	;# 
    58     000E                     	;# 
    59     000F                     	;# 
    60     0010                     	;# 
    61     0011                     	;# 
    62     0012                     	;# 
    63     0015                     	;# 
    64     0015                     	;# 
    65     0016                     	;# 
    66     0017                     	;# 
    67     0018                     	;# 
    68     0019                     	;# 
    69     001A                     	;# 
    70     001F                     	;# 
    71     0081                     	;# 
    72     0085                     	;# 
    73     0086                     	;# 
    74     008C                     	;# 
    75     008E                     	;# 
    76     0092                     	;# 
    77     0098                     	;# 
    78     0099                     	;# 
    79     009A                     	;# 
    80     009B                     	;# 
    81     009C                     	;# 
    82     009D                     	;# 
    83     009F                     	;# 
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     008C                     	;# 
   112     008E                     	;# 
   113     0092                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009F                     	;# 
   121                           
   122                           	psect	strings
   123     0019                     __pstrings:
   124     0019                     stringtab:
   125     0019                     __stringtab:
   126     0019                     stringcode:	
   127                           ;	String table - string pointers are 1 byte each
   128                           
   129     0019                     stringdir:
   130     0019  3000               	movlw	high stringdir
   131     001A  008A               	movwf	10
   132     001B  0804               	movf	4,w
   133     001C  0A84               	incf	4,f
   134     001D  0782               	addwf	2,f
   135     001E                     __stringbase:
   136     001E  3400               	retlw	0
   137     001F                     __end_of__stringtab:
   138     001F                     _tempi_timer:
   139     001F  34F4               	retlw	244
   140     0020  34E8               	retlw	232
   141     0021  34D0               	retlw	208
   142     0022  34A0               	retlw	160
   143     0023                     __end_of_tempi_timer:
   144     0006                     _PORTB	set	6
   145     0086                     _TRISB	set	134
   146                           
   147                           	psect	cinit
   148     000B                     start_initialization:	
   149                           ; #config settings
   150                           
   151     000B                     __initialization:
   152     000B                     end_of_initialization:	
   153                           ;End of C runtime variable initialization code
   154                           
   155     000B                     __end_of__initialization:
   156     000B  0183               	clrf	3
   157     000C  2823               	ljmp	_main	;jump to C main() function
   158                           
   159                           	psect	cstackCOMMON
   160     0070                     __pcstackCOMMON:
   161     0070                     ?_main:
   162     0070                     ?_ISR:	
   163                           ; 1 bytes @ 0x0
   164                           
   165     0070                     ??_ISR:	
   166                           ; 1 bytes @ 0x0
   167                           
   168                           
   169                           ; 1 bytes @ 0x0
   170     0070                     	ds	2
   171     0072                     ??_main:
   172                           
   173                           	psect	maintext
   174     0023                     __pmaintext:	
   175                           ; 1 bytes @ 0x2
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 25 in file "newmain.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		status,2
   190 ;; Tracked objects:
   191 ;;		On entry : B00/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   195 ;;      Params:         0       0       0       0
   196 ;;      Locals:         0       0       0       0
   197 ;;      Temps:          0       0       0       0
   198 ;;      Totals:         0       0       0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels required when called: 1
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208     0023                     _main:	
   209                           ;psect for function _main
   210                           
   211     0023                     l563:	
   212                           ;incstack = 0
   213                           ; Regs used in _main: [status,2]
   214                           
   215     0023  1683               	bsf	3,5	;RP0=1, select bank1
   216     0024  1303               	bcf	3,6	;RP1=0, select bank1
   217     0025  0186               	clrf	6	;volatile
   218     0026                     l11:
   219     0026  280A               	ljmp	start
   220     0027                     __end_of_main:
   221                           
   222                           	psect	text1
   223     000D                     __ptext1:	
   224 ;; *************** function _ISR *****************
   225 ;; Defined at:
   226 ;;		line 30 in file "newmain.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   240 ;;      Params:         0       0       0       0
   241 ;;      Locals:         0       0       0       0
   242 ;;      Temps:          2       0       0       0
   243 ;;      Totals:         2       0       0       0
   244 ;;Total ram usage:        2 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		Interrupt level 1
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     000D                     _ISR:	
   254                           ;psect for function _ISR
   255                           
   256     000D                     i1l16:
   257     000D                     i1l565:
   258     000D  3001               	movlw	1
   259     000E  1283               	bcf	3,5	;RP0=0, select bank0
   260     000F  1303               	bcf	3,6	;RP1=0, select bank0
   261     0010  0086               	movwf	6	;volatile
   262     0011  280D               	goto	i1l16
   263     0012  0871               	movf	??_ISR+1,w
   264     0013  008A               	movwf	10
   265     0014  0E70               	swapf	??_ISR,w
   266     0015  0083               	movwf	3
   267     0016  0EFE               	swapf	btemp,f
   268     0017  0E7E               	swapf	btemp,w
   269     0018  0009               	retfie
   270     0019                     __end_of_ISR:
   271     007E                     btemp	set	126	;btemp
   272     007E                     wtemp0	set	126
   273                           
   274                           	psect	intentry
   275     0004                     __pintentry:	
   276                           ;incstack = 0
   277                           ; Regs used in _ISR: [wreg]
   278                           
   279     0004                     interrupt_function:
   280     007E                     saved_w	set	btemp
   281     0004  00FE               	movwf	btemp
   282     0005  0E03               	swapf	3,w
   283     0006  00F0               	movwf	??_ISR
   284     0007  080A               	movf	10,w
   285     0008  00F1               	movwf	??_ISR+1
   286     0009  280D               	ljmp	_ISR
   287                           
   288                           	psect	config
   289                           
   290                           ;Config register CONFIG @ 0x2007
   291                           ;	Oscillator Selection bits
   292                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   293                           ;	Watchdog Timer Enable bit
   294                           ;	WDTE = OFF, WDT disabled
   295                           ;	Power-up Timer Enable bit
   296                           ;	PWRTE = ON, PWRT enabled
   297                           ;	RA5/MCLR/VPP Pin Function Select bit
   298                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   299                           ;	Brown-out Detect Enable bit
   300                           ;	BOREN = ON, BOD enabled
   301                           ;	Low-Voltage Programming Enable bit
   302                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   303                           ;	Data EE Memory Code Protection bit
   304                           ;	CPD = OFF, Data memory code protection off
   305                           ;	Flash Program Memory Code Protection bit
   306                           ;	CP = OFF, Code protection off
   307     2007                     	org	8199
   308     2007  3F62               	dw	16226

Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 08 15:43:33 2023

                      pc 0002                       l11 0026                       fsr 0004  
                    l563 0023                      _ISR 000D                     ?_ISR 0070  
                   i1l16 000D                     _main 0023                     btemp 007E  
                   start 000A                    ??_ISR 0070                    ?_main 0070  
                  i1l565 000D                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 0027                   ??_main 0072  
                 saved_w 007E  __end_of__initialization 000B           __pcstackCOMMON 0070  
             __pmaintext 0023               __pintentry 0004               __stringtab 0019  
                __ptext1 000D     end_of_initialization 000B      start_initialization 000B  
            __end_of_ISR 0019                ___latbits 0000                __pstrings 0019  
      interrupt_function 0004              __stringbase 001E       __end_of__stringtab 001F  
    __end_of_tempi_timer 0023                 intlevel1 0000                stringcode 0019  
            _tempi_timer 001F                 stringdir 0019                 stringtab 0019  
