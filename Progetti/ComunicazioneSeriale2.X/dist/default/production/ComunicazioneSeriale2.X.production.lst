

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec 15 10:21:54 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16LF877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0019                     _TXREG	set	25
   170     000C                     _PIR1bits	set	12
   171     000B                     _INTCON	set	11
   172     0018                     _RCSTA	set	24
   173     0099                     _SPBRG	set	153
   174     008C                     _PIE1	set	140
   175     0098                     _TXSTAbits	set	152
   176     0087                     _TRISCbits	set	135
   177                           
   178                           	psect	strings
   179     0003                     __pstrings:
   180     0003                     stringtab:
   181     0003                     __stringtab:
   182     0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185     0003                     stringdir:
   186     0003  3000               	movlw	high stringdir
   187     0004  008A               	movwf	10
   188     0005  0804               	movf	4,w
   189     0006  0A84               	incf	4,f
   190     0007  0782               	addwf	2,f
   191     0008                     __stringbase:
   192     0008  3400               	retlw	0
   193     0009                     __end_of__stringtab:
   194     0009                     STR_1:
   195     0009  3463               	retlw	99	;'c'
   196     000A  3469               	retlw	105	;'i'
   197     000B  3461               	retlw	97	;'a'
   198     000C  346F               	retlw	111	;'o'
   199     000D  3400               	retlw	0
   200                           
   201                           	psect	cinit
   202     07FC                     start_initialization:	
   203                           ; #config settings
   204                           
   205     07FC                     __initialization:
   206     07FC                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209     07FC                     __end_of__initialization:
   210     07FC  0183               	clrf	3
   211     07FD  120A  118A  2ED7   	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	cstackCOMMON
   214     0070                     __pcstackCOMMON:
   215     0070                     ?_SENDUARTSTRING:
   216     0070                     ??_SENDUARTSTRING:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ?_main:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ?___aldiv:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     SENDUARTSTRING@string:	
   226                           ; 4 bytes @ 0x0
   227                           
   228     0070                     ___aldiv@divisor:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 4 bytes @ 0x0
   233     0070                     	ds	1
   234     0071                     SENDUARTSTRING@i:
   235                           
   236                           ; 1 bytes @ 0x1
   237     0071                     	ds	3
   238     0074                     ___aldiv@dividend:
   239                           
   240                           ; 4 bytes @ 0x4
   241     0074                     	ds	4
   242     0078                     ??___aldiv:
   243                           
   244                           ; 1 bytes @ 0x8
   245     0078                     	ds	1
   246     0079                     ??_INITUART:
   247                           
   248                           ; 1 bytes @ 0x9
   249     0079                     	ds	4
   250                           
   251                           	psect	cstackBANK0
   252     0020                     __pcstackBANK0:
   253     0020                     ___aldiv@counter:
   254                           
   255                           ; 1 bytes @ 0x0
   256     0020                     	ds	1
   257     0021                     ___aldiv@sign:
   258                           
   259                           ; 1 bytes @ 0x1
   260     0021                     	ds	1
   261     0022                     ___aldiv@quotient:
   262                           
   263                           ; 4 bytes @ 0x2
   264     0022                     	ds	4
   265     0026                     ?_INITUART:
   266     0026                     INITUART@baudRate:	
   267                           ; 1 bytes @ 0x6
   268                           
   269                           
   270                           ; 2 bytes @ 0x6
   271     0026                     	ds	2
   272     0028                     ??_main:
   273                           
   274                           ; 1 bytes @ 0x8
   275     0028                     	ds	3
   276                           
   277                           	psect	maintext
   278     06D7                     __pmaintext:	
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 16 in file "newmain.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   298 ;;      Params:         0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0
   300 ;;      Temps:          0       3       0       0       0
   301 ;;      Totals:         0       3       0       0       0
   302 ;;Total ram usage:        3 bytes
   303 ;; Hardware stack levels required when called: 2
   304 ;; This function calls:
   305 ;;		_INITUART
   306 ;;		_SENDUARTSTRING
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312     06D7                     _main:	
   313                           ;psect for function _main
   314                           
   315     06D7                     l708:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   318                           
   319                           
   320                           ;newmain.c: 18:     INITUART(9600);
   321     06D7  3080               	movlw	128
   322     06D8  1283               	bcf	3,5	;RP0=0, select bank0
   323     06D9  1303               	bcf	3,6	;RP1=0, select bank0
   324     06DA  00A6               	movwf	INITUART@baudRate
   325     06DB  3025               	movlw	37
   326     06DC  00A7               	movwf	INITUART@baudRate+1
   327     06DD  120A  118A  271E  120A  118A  	fcall	_INITUART
   328     06E2                     l710:
   329                           
   330                           ;newmain.c: 21:         SENDUARTSTRING("ciao");
   331     06E2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   332     06E3  120A  118A  26FA  120A  118A  	fcall	_SENDUARTSTRING
   333     06E8                     l712:
   334                           
   335                           ;newmain.c: 22:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   336     06E8  300B               	movlw	11
   337     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   338     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   339     06EB  00AA               	movwf	??_main+2
   340     06EC  3026               	movlw	38
   341     06ED  00A9               	movwf	??_main+1
   342     06EE  305D               	movlw	93
   343     06EF  00A8               	movwf	??_main
   344     06F0                     u277:
   345     06F0  0BA8               	decfsz	??_main,f
   346     06F1  2EF0               	goto	u277
   347     06F2  0BA9               	decfsz	??_main+1,f
   348     06F3  2EF0               	goto	u277
   349     06F4  0BAA               	decfsz	??_main+2,f
   350     06F5  2EF0               	goto	u277
   351     06F6  2EE2               	goto	l710
   352     06F7  120A  118A  2800   	ljmp	start
   353     06FA                     __end_of_main:
   354                           
   355                           	psect	text1
   356     06FA                     __ptext1:	
   357 ;; *************** function _SENDUARTSTRING *****************
   358 ;; Defined at:
   359 ;;		line 49 in file "newmain.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;  string          1    wreg     PTR unsigned char 
   362 ;;		 -> STR_1(5), 
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  string          1    0[COMMON] PTR unsigned char 
   365 ;;		 -> STR_1(5), 
   366 ;;  i               1    1[COMMON] unsigned char 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         2       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         2       0       0       0       0
   380 ;;Total ram usage:        2 bytes
   381 ;; Hardware stack levels used: 2
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389     06FA                     _SENDUARTSTRING:	
   390                           ;psect for function _SENDUARTSTRING
   391                           
   392                           
   393                           ;incstack = 0
   394                           ; Regs used in _SENDUARTSTRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   395                           ;SENDUARTSTRING@string stored from wreg
   396     06FA  00F0               	movwf	SENDUARTSTRING@string
   397     06FB                     l700:
   398                           
   399                           ;newmain.c: 51:     char i = 0;
   400     06FB  01F1               	clrf	SENDUARTSTRING@i
   401                           
   402                           ;newmain.c: 53:     while (string[i] != '\0') {
   403     06FC  2F10               	goto	l706
   404     06FD                     l38:
   405     06FD  1283               	bcf	3,5	;RP0=0, select bank0
   406     06FE  1303               	bcf	3,6	;RP1=0, select bank0
   407     06FF  1E0C               	btfss	12,4	;volatile
   408     0700  2F02               	goto	u251
   409     0701  2F03               	goto	u250
   410     0702                     u251:
   411     0702  2EFD               	goto	l38
   412     0703                     u250:
   413     0703                     l702:
   414                           
   415                           ;newmain.c: 56:         TXREG = string[i++];
   416     0703  0871               	movf	SENDUARTSTRING@i,w
   417     0704  0770               	addwf	SENDUARTSTRING@string,w
   418     0705  0084               	movwf	4
   419     0706  120A  118A  2003  120A  118A  	fcall	stringdir
   420     070B  0099               	movwf	25	;volatile
   421     070C                     l704:
   422     070C  3001               	movlw	1
   423     070D  00FF               	movwf	btemp+1
   424     070E  087F               	movf	btemp+1,w
   425     070F  07F1               	addwf	SENDUARTSTRING@i,f
   426     0710                     l706:
   427                           
   428                           ;newmain.c: 53:     while (string[i] != '\0') {
   429     0710  0871               	movf	SENDUARTSTRING@i,w
   430     0711  0770               	addwf	SENDUARTSTRING@string,w
   431     0712  0084               	movwf	4
   432     0713  120A  118A  2003  120A  118A  	fcall	stringdir
   433     0718  3A00               	xorlw	0
   434     0719  1D03               	skipz
   435     071A  2F1C               	goto	u261
   436     071B  2F1D               	goto	u260
   437     071C                     u261:
   438     071C  2EFD               	goto	l38
   439     071D                     u260:
   440     071D                     l42:
   441     071D  0008               	return
   442     071E                     __end_of_SENDUARTSTRING:
   443                           
   444                           	psect	text2
   445     071E                     __ptext2:	
   446 ;; *************** function _INITUART *****************
   447 ;; Defined at:
   448 ;;		line 26 in file "newmain.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  baudRate        2    6[BANK0 ] int 
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         0       2       0       0       0
   463 ;;      Locals:         0       0       0       0       0
   464 ;;      Temps:          4       0       0       0       0
   465 ;;      Totals:         4       2       0       0       0
   466 ;;Total ram usage:        6 bytes
   467 ;; Hardware stack levels used: 1
   468 ;; Hardware stack levels required when called: 1
   469 ;; This function calls:
   470 ;;		___aldiv
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476     071E                     _INITUART:	
   477                           ;psect for function _INITUART
   478                           
   479     071E                     l692:	
   480                           ;incstack = 0
   481                           ; Regs used in _INITUART: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   482                           
   483                           
   484                           ;newmain.c: 26: void INITUART(int baudRate);newmain.c: 27: {;newmain.c: 28:     TRISCbit
      +                          s.TRISC7 = 1;
   485     071E  1683               	bsf	3,5	;RP0=1, select bank1
   486     071F  1303               	bcf	3,6	;RP1=0, select bank1
   487     0720  1787               	bsf	7,7	;volatile
   488                           
   489                           ;newmain.c: 29:     TRISCbits.TRISC6 = 0;
   490     0721  1307               	bcf	7,6	;volatile
   491                           
   492                           ;newmain.c: 35:     TXSTAbits.TXEN = 1;
   493     0722  1698               	bsf	24,5	;volatile
   494     0723                     l694:
   495                           
   496                           ;newmain.c: 41:     RCSTA |= 0x90;
   497     0723  3090               	movlw	144
   498     0724  00FF               	movwf	btemp+1
   499     0725  087F               	movf	btemp+1,w
   500     0726  1283               	bcf	3,5	;RP0=0, select bank0
   501     0727  1303               	bcf	3,6	;RP1=0, select bank0
   502     0728  0498               	iorwf	24,f	;volatile
   503                           
   504                           ;newmain.c: 43:     INTCON |= 0xC0;
   505     0729  30C0               	movlw	192
   506     072A  00FF               	movwf	btemp+1
   507     072B  087F               	movf	btemp+1,w
   508     072C  048B               	iorwf	11,f	;volatile
   509     072D                     l696:
   510                           
   511                           ;newmain.c: 44:     PIE1 |= 0x20;
   512     072D  1683               	bsf	3,5	;RP0=1, select bank1
   513     072E  1303               	bcf	3,6	;RP1=0, select bank1
   514     072F  168C               	bsf	12,5	;volatile
   515     0730                     l698:
   516                           
   517                           ;newmain.c: 46:     SPBRG = (8000000 / (long) (64UL * baudRate)) - 1;
   518     0730  1283               	bcf	3,5	;RP0=0, select bank0
   519     0731  1303               	bcf	3,6	;RP1=0, select bank0
   520     0732  0826               	movf	INITUART@baudRate,w
   521     0733  00F9               	movwf	??_INITUART
   522     0734  0827               	movf	INITUART@baudRate+1,w
   523     0735  00FA               	movwf	??_INITUART+1
   524     0736  3000               	movlw	0
   525     0737  1BFA               	btfsc	??_INITUART+1,7
   526     0738  30FF               	movlw	255
   527     0739  00FB               	movwf	??_INITUART+2
   528     073A  00FC               	movwf	??_INITUART+3
   529     073B  3006               	movlw	6
   530     073C                     u245:
   531     073C  1003               	clrc
   532     073D  0DF9               	rlf	??_INITUART,f
   533     073E  0DFA               	rlf	??_INITUART+1,f
   534     073F  0DFB               	rlf	??_INITUART+2,f
   535     0740  0DFC               	rlf	??_INITUART+3,f
   536     0741                     u240:
   537     0741  3EFF               	addlw	-1
   538     0742  1D03               	skipz
   539     0743  2F3C               	goto	u245
   540     0744  087C               	movf	??_INITUART+3,w
   541     0745  00F3               	movwf	___aldiv@divisor+3
   542     0746  087B               	movf	??_INITUART+2,w
   543     0747  00F2               	movwf	___aldiv@divisor+2
   544     0748  087A               	movf	??_INITUART+1,w
   545     0749  00F1               	movwf	___aldiv@divisor+1
   546     074A  0879               	movf	??_INITUART,w
   547     074B  00F0               	movwf	___aldiv@divisor
   548     074C  3000               	movlw	0
   549     074D  00F7               	movwf	___aldiv@dividend+3
   550     074E  307A               	movlw	122
   551     074F  00F6               	movwf	___aldiv@dividend+2
   552     0750  3012               	movlw	18
   553     0751  00F5               	movwf	___aldiv@dividend+1
   554     0752  3000               	movlw	0
   555     0753  00F4               	movwf	___aldiv@dividend
   556     0754  120A  118A  275F  120A  118A  	fcall	___aldiv
   557     0759  0870               	movf	?___aldiv,w
   558     075A  3EFF               	addlw	255
   559     075B  1683               	bsf	3,5	;RP0=1, select bank1
   560     075C  1303               	bcf	3,6	;RP1=0, select bank1
   561     075D  0099               	movwf	25	;volatile
   562     075E                     l33:
   563     075E  0008               	return
   564     075F                     __end_of_INITUART:
   565                           
   566                           	psect	text3
   567     075F                     __ptext3:	
   568 ;; *************** function ___aldiv *****************
   569 ;; Defined at:
   570 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  divisor         4    0[COMMON] long 
   573 ;;  dividend        4    4[COMMON] long 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  quotient        4    2[BANK0 ] long 
   576 ;;  sign            1    1[BANK0 ] unsigned char 
   577 ;;  counter         1    0[BANK0 ] unsigned char 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  4    0[COMMON] long 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0, btemp+1
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         8       0       0       0       0
   588 ;;      Locals:         0       6       0       0       0
   589 ;;      Temps:          1       0       0       0       0
   590 ;;      Totals:         9       6       0       0       0
   591 ;;Total ram usage:       15 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_INITUART
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600     075F                     ___aldiv:	
   601                           ;psect for function ___aldiv
   602                           
   603     075F                     l650:	
   604                           ;incstack = 0
   605                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   606                           
   607     075F  1283               	bcf	3,5	;RP0=0, select bank0
   608     0760  1303               	bcf	3,6	;RP1=0, select bank0
   609     0761  01A1               	clrf	___aldiv@sign
   610     0762                     l652:
   611     0762  1FF3               	btfss	___aldiv@divisor+3,7
   612     0763  2F65               	goto	u141
   613     0764  2F66               	goto	u140
   614     0765                     u141:
   615     0765  2F73               	goto	l193
   616     0766                     u140:
   617     0766                     l654:
   618     0766  09F0               	comf	___aldiv@divisor,f
   619     0767  09F1               	comf	___aldiv@divisor+1,f
   620     0768  09F2               	comf	___aldiv@divisor+2,f
   621     0769  09F3               	comf	___aldiv@divisor+3,f
   622     076A  0AF0               	incf	___aldiv@divisor,f
   623     076B  1903               	skipnz
   624     076C  0AF1               	incf	___aldiv@divisor+1,f
   625     076D  1903               	skipnz
   626     076E  0AF2               	incf	___aldiv@divisor+2,f
   627     076F  1903               	skipnz
   628     0770  0AF3               	incf	___aldiv@divisor+3,f
   629     0771  01A1               	clrf	___aldiv@sign
   630     0772  0AA1               	incf	___aldiv@sign,f
   631     0773                     l193:
   632     0773  1FF7               	btfss	___aldiv@dividend+3,7
   633     0774  2F76               	goto	u151
   634     0775  2F77               	goto	u150
   635     0776                     u151:
   636     0776  2F86               	goto	l660
   637     0777                     u150:
   638     0777                     l656:
   639     0777  09F4               	comf	___aldiv@dividend,f
   640     0778  09F5               	comf	___aldiv@dividend+1,f
   641     0779  09F6               	comf	___aldiv@dividend+2,f
   642     077A  09F7               	comf	___aldiv@dividend+3,f
   643     077B  0AF4               	incf	___aldiv@dividend,f
   644     077C  1903               	skipnz
   645     077D  0AF5               	incf	___aldiv@dividend+1,f
   646     077E  1903               	skipnz
   647     077F  0AF6               	incf	___aldiv@dividend+2,f
   648     0780  1903               	skipnz
   649     0781  0AF7               	incf	___aldiv@dividend+3,f
   650     0782                     l658:
   651     0782  3001               	movlw	1
   652     0783  00FF               	movwf	btemp+1
   653     0784  087F               	movf	btemp+1,w
   654     0785  06A1               	xorwf	___aldiv@sign,f
   655     0786                     l660:
   656     0786  3000               	movlw	0
   657     0787  00A5               	movwf	___aldiv@quotient+3
   658     0788  3000               	movlw	0
   659     0789  00A4               	movwf	___aldiv@quotient+2
   660     078A  3000               	movlw	0
   661     078B  00A3               	movwf	___aldiv@quotient+1
   662     078C  3000               	movlw	0
   663     078D  00A2               	movwf	___aldiv@quotient
   664     078E                     l662:
   665     078E  0873               	movf	___aldiv@divisor+3,w
   666     078F  0472               	iorwf	___aldiv@divisor+2,w
   667     0790  0471               	iorwf	___aldiv@divisor+1,w
   668     0791  0470               	iorwf	___aldiv@divisor,w
   669     0792  1903               	skipnz
   670     0793  2F95               	goto	u161
   671     0794  2F96               	goto	u160
   672     0795                     u161:
   673     0795  2FE3               	goto	l684
   674     0796                     u160:
   675     0796                     l664:
   676     0796  01A0               	clrf	___aldiv@counter
   677     0797  0AA0               	incf	___aldiv@counter,f
   678     0798  2FA6               	goto	l670
   679     0799                     l666:
   680     0799  3001               	movlw	1
   681     079A  00F8               	movwf	??___aldiv
   682     079B                     u175:
   683     079B  1003               	clrc
   684     079C  0DF0               	rlf	___aldiv@divisor,f
   685     079D  0DF1               	rlf	___aldiv@divisor+1,f
   686     079E  0DF2               	rlf	___aldiv@divisor+2,f
   687     079F  0DF3               	rlf	___aldiv@divisor+3,f
   688     07A0  0BF8               	decfsz	??___aldiv,f
   689     07A1  2F9B               	goto	u175
   690     07A2                     l668:
   691     07A2  3001               	movlw	1
   692     07A3  00FF               	movwf	btemp+1
   693     07A4  087F               	movf	btemp+1,w
   694     07A5  07A0               	addwf	___aldiv@counter,f
   695     07A6                     l670:
   696     07A6  1FF3               	btfss	___aldiv@divisor+3,7
   697     07A7  2FA9               	goto	u181
   698     07A8  2FAA               	goto	u180
   699     07A9                     u181:
   700     07A9  2F99               	goto	l666
   701     07AA                     u180:
   702     07AA                     l672:
   703     07AA  3001               	movlw	1
   704     07AB  00F8               	movwf	??___aldiv
   705     07AC                     u195:
   706     07AC  1003               	clrc
   707     07AD  0DA2               	rlf	___aldiv@quotient,f
   708     07AE  0DA3               	rlf	___aldiv@quotient+1,f
   709     07AF  0DA4               	rlf	___aldiv@quotient+2,f
   710     07B0  0DA5               	rlf	___aldiv@quotient+3,f
   711     07B1  0BF8               	decfsz	??___aldiv,f
   712     07B2  2FAC               	goto	u195
   713     07B3                     l674:
   714     07B3  0873               	movf	___aldiv@divisor+3,w
   715     07B4  0277               	subwf	___aldiv@dividend+3,w
   716     07B5  1D03               	skipz
   717     07B6  2FC1               	goto	u205
   718     07B7  0872               	movf	___aldiv@divisor+2,w
   719     07B8  0276               	subwf	___aldiv@dividend+2,w
   720     07B9  1D03               	skipz
   721     07BA  2FC1               	goto	u205
   722     07BB  0871               	movf	___aldiv@divisor+1,w
   723     07BC  0275               	subwf	___aldiv@dividend+1,w
   724     07BD  1D03               	skipz
   725     07BE  2FC1               	goto	u205
   726     07BF  0870               	movf	___aldiv@divisor,w
   727     07C0  0274               	subwf	___aldiv@dividend,w
   728     07C1                     u205:
   729     07C1  1C03               	skipc
   730     07C2  2FC4               	goto	u201
   731     07C3  2FC5               	goto	u200
   732     07C4                     u201:
   733     07C4  2FD4               	goto	l680
   734     07C5                     u200:
   735     07C5                     l676:
   736     07C5  0870               	movf	___aldiv@divisor,w
   737     07C6  02F4               	subwf	___aldiv@dividend,f
   738     07C7  0871               	movf	___aldiv@divisor+1,w
   739     07C8  1C03               	skipc
   740     07C9  0F71               	incfsz	___aldiv@divisor+1,w
   741     07CA  02F5               	subwf	___aldiv@dividend+1,f
   742     07CB  0872               	movf	___aldiv@divisor+2,w
   743     07CC  1C03               	skipc
   744     07CD  0F72               	incfsz	___aldiv@divisor+2,w
   745     07CE  02F6               	subwf	___aldiv@dividend+2,f
   746     07CF  0873               	movf	___aldiv@divisor+3,w
   747     07D0  1C03               	skipc
   748     07D1  0F73               	incfsz	___aldiv@divisor+3,w
   749     07D2  02F7               	subwf	___aldiv@dividend+3,f
   750     07D3                     l678:
   751     07D3  1422               	bsf	___aldiv@quotient,0
   752     07D4                     l680:
   753     07D4  3001               	movlw	1
   754     07D5                     u215:
   755     07D5  1003               	clrc
   756     07D6  0CF3               	rrf	___aldiv@divisor+3,f
   757     07D7  0CF2               	rrf	___aldiv@divisor+2,f
   758     07D8  0CF1               	rrf	___aldiv@divisor+1,f
   759     07D9  0CF0               	rrf	___aldiv@divisor,f
   760     07DA  3EFF               	addlw	-1
   761     07DB  1D03               	skipz
   762     07DC  2FD5               	goto	u215
   763     07DD                     l682:
   764     07DD  3001               	movlw	1
   765     07DE  02A0               	subwf	___aldiv@counter,f
   766     07DF  1D03               	btfss	3,2
   767     07E0  2FE2               	goto	u221
   768     07E1  2FE3               	goto	u220
   769     07E2                     u221:
   770     07E2  2FAA               	goto	l672
   771     07E3                     u220:
   772     07E3                     l684:
   773     07E3  0821               	movf	___aldiv@sign,w
   774     07E4  1903               	btfsc	3,2
   775     07E5  2FE7               	goto	u231
   776     07E6  2FE8               	goto	u230
   777     07E7                     u231:
   778     07E7  2FF3               	goto	l688
   779     07E8                     u230:
   780     07E8                     l686:
   781     07E8  09A2               	comf	___aldiv@quotient,f
   782     07E9  09A3               	comf	___aldiv@quotient+1,f
   783     07EA  09A4               	comf	___aldiv@quotient+2,f
   784     07EB  09A5               	comf	___aldiv@quotient+3,f
   785     07EC  0AA2               	incf	___aldiv@quotient,f
   786     07ED  1903               	skipnz
   787     07EE  0AA3               	incf	___aldiv@quotient+1,f
   788     07EF  1903               	skipnz
   789     07F0  0AA4               	incf	___aldiv@quotient+2,f
   790     07F1  1903               	skipnz
   791     07F2  0AA5               	incf	___aldiv@quotient+3,f
   792     07F3                     l688:
   793     07F3  0825               	movf	___aldiv@quotient+3,w
   794     07F4  00F3               	movwf	?___aldiv+3
   795     07F5  0824               	movf	___aldiv@quotient+2,w
   796     07F6  00F2               	movwf	?___aldiv+2
   797     07F7  0823               	movf	___aldiv@quotient+1,w
   798     07F8  00F1               	movwf	?___aldiv+1
   799     07F9  0822               	movf	___aldiv@quotient,w
   800     07FA  00F0               	movwf	?___aldiv
   801     07FB                     l203:
   802     07FB  0008               	return
   803     07FC                     __end_of___aldiv:
   804     007E                     btemp	set	126	;btemp
   805     007E                     wtemp0	set	126
   806                           
   807                           	psect	config
   808                           
   809                           ;Config register CONFIG @ 0x2007
   810                           ;	Oscillator Selection bits
   811                           ;	FOSC = HS, HS oscillator
   812                           ;	Watchdog Timer Enable bit
   813                           ;	WDTE = OFF, WDT disabled
   814                           ;	Power-up Timer Enable bit
   815                           ;	PWRTE = ON, PWRT enabled
   816                           ;	Brown-out Reset Enable bit
   817                           ;	BOREN = ON, BOR enabled
   818                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   819                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   820                           ;	Data EEPROM Memory Code Protection bit
   821                           ;	CPD = OFF, Data EEPROM code protection off
   822                           ;	Flash Program Memory Write Enable bits
   823                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   824                           ;	In-Circuit Debugger Mode bit
   825                           ;	DEBUG = 0x1, unprogrammed default
   826                           ;	Flash Program Memory Code Protection bit
   827                           ;	CP = OFF, Code protection off
   828     2007                     	org	8199
   829     2007  3FF2               	dw	16370

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     11      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    SENDUARTSTRING@string	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_INITUART
    _INITUART->___aldiv

Critical Paths under _main in BANK0

    _main->_INITUART
    _INITUART->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     673
                                              8 BANK0      3     3      0
                           _INITUART
                     _SENDUARTSTRING
 ---------------------------------------------------------------------------------
 (2) _SENDUARTSTRING                                       2     2      0     123
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _INITUART                                             6     4      2     550
                                              9 COMMON     4     4      0
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INITUART
     ___aldiv
   _SENDUARTSTRING

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec 15 10:21:54 2023

                      pc 0002                       l33 075E                       l42 071D  
                     l38 06FD                       fsr 0004                      l203 07FB  
                    l193 0773                      l700 06FB                      l702 0703  
                    l710 06E2                      l704 070C                      l712 06E8  
                    l650 075F                      l706 0710                      l660 0786  
                    l652 0762                      l708 06D7                      l670 07A6  
                    l662 078E                      l654 0766                      l680 07D4  
                    l672 07AA                      l664 0796                      l656 0777  
                    l682 07DD                      l674 07B3                      l666 0799  
                    l658 0782                      l676 07C5                      l668 07A2  
                    l684 07E3                      l692 071E                      l686 07E8  
                    l678 07D3                      l694 0723                      l688 07F3  
                    l696 072D                      l698 0730                      u200 07C5  
                    u201 07C4                      u220 07E3                      u140 0766  
                    u221 07E2                      u205 07C1                      u141 0765  
                    u230 07E8                      u150 0777                      u231 07E7  
                    u215 07D5                      u151 0776                      u160 0796  
                    u240 0741                      u161 0795                      u250 0703  
                    u251 0702                      u180 07AA                      u260 071D  
                    u181 07A9                      u245 073C                      u261 071C  
                    u175 079B                      u195 07AC                      u277 06F0  
                    fsr0 0004                     STR_1 0009                     _PIE1 008C  
                   _main 06D7                     btemp 007E                     start 0000  
       __end_of_INITUART 075F          __end_of___aldiv 07FC                    ?_main 0070  
   SENDUARTSTRING@string 0070                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 06FA  
                 ??_main 0028         ??_SENDUARTSTRING 0070                   _INTCON 000B  
        SENDUARTSTRING@i 0071                ??___aldiv 0078         INITUART@baudRate 0026  
__end_of__initialization 07FC                ?_INITUART 0026           __pcstackCOMMON 0070  
             ??_INITUART 0079               __pmaintext 06D7               __stringtab 0003  
                ___aldiv 075F                  __ptext1 06FA                  __ptext2 071E  
                __ptext3 075F         ___aldiv@dividend 0074     end_of_initialization 07FC  
       ___aldiv@quotient 0022                _TRISCbits 0087                _TXSTAbits 0098  
    start_initialization 07FC                ___latbits 0002            __pcstackBANK0 0020  
               ?___aldiv 0070                __pstrings 0003          ___aldiv@divisor 0070  
        ___aldiv@counter 0020                 _INITUART 071E                 _PIR1bits 000C  
            __stringbase 0008           _SENDUARTSTRING 06FA       __end_of__stringtab 0009  
 __end_of_SENDUARTSTRING 071E          ?_SENDUARTSTRING 0070                stringcode 0003  
               stringdir 0003                 stringtab 0003             ___aldiv@sign 0021  
