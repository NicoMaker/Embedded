

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec 01 10:24:23 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16LF877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0018                     _RCSTA	set	24
   168     0018                     _RCSTAbits	set	24
   169     0019                     _TXREG	set	25
   170     0099                     _SPBRG	set	153
   171     0098                     _TXSTAbits	set	152
   172     0087                     _TRISCbits	set	135
   173                           
   174                           	psect	cinit
   175     07FC                     start_initialization:	
   176                           ; #config settings
   177                           
   178     07FC                     __initialization:
   179     07FC                     end_of_initialization:	
   180                           ;End of C runtime variable initialization code
   181                           
   182     07FC                     __end_of__initialization:
   183     07FC  0183               	clrf	3
   184     07FD  120A  118A  2F02   	ljmp	_main	;jump to C main() function
   185                           
   186                           	psect	cstackCOMMON
   187     0070                     __pcstackCOMMON:
   188     0070                     ?_main:
   189     0070                     ?___aldiv:	
   190                           ; 1 bytes @ 0x0
   191                           
   192     0070                     ___aldiv@divisor:	
   193                           ; 4 bytes @ 0x0
   194                           
   195                           
   196                           ; 4 bytes @ 0x0
   197     0070                     	ds	4
   198     0074                     ___aldiv@dividend:
   199                           
   200                           ; 4 bytes @ 0x4
   201     0074                     	ds	4
   202     0078                     ??___aldiv:
   203                           
   204                           ; 1 bytes @ 0x8
   205     0078                     	ds	1
   206     0079                     ??_initUART:
   207                           
   208                           ; 1 bytes @ 0x9
   209     0079                     	ds	4
   210                           
   211                           	psect	cstackBANK0
   212     0020                     __pcstackBANK0:
   213     0020                     ___aldiv@counter:
   214                           
   215                           ; 1 bytes @ 0x0
   216     0020                     	ds	1
   217     0021                     ___aldiv@sign:
   218                           
   219                           ; 1 bytes @ 0x1
   220     0021                     	ds	1
   221     0022                     ___aldiv@quotient:
   222                           
   223                           ; 4 bytes @ 0x2
   224     0022                     	ds	4
   225     0026                     ?_initUART:
   226     0026                     initUART@baudRate:	
   227                           ; 1 bytes @ 0x6
   228                           
   229                           
   230                           ; 4 bytes @ 0x6
   231     0026                     	ds	4
   232     002A                     ??_main:
   233                           
   234                           ; 1 bytes @ 0xA
   235     002A                     	ds	3
   236                           
   237                           	psect	maintext
   238     0702                     __pmaintext:	
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 22 in file "newmain.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0
   260 ;;      Temps:          0       3       0       0       0
   261 ;;      Totals:         0       3       0       0       0
   262 ;;Total ram usage:        3 bytes
   263 ;; Hardware stack levels required when called: 2
   264 ;; This function calls:
   265 ;;		_initUART
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271     0702                     _main:	
   272                           ;psect for function _main
   273                           
   274     0702                     l673:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   277                           
   278                           
   279                           ;newmain.c: 24:     initUART(9600);
   280     0702  3000               	movlw	0
   281     0703  1283               	bcf	3,5	;RP0=0, select bank0
   282     0704  1303               	bcf	3,6	;RP1=0, select bank0
   283     0705  00A9               	movwf	initUART@baudRate+3
   284     0706  3000               	movlw	0
   285     0707  00A8               	movwf	initUART@baudRate+2
   286     0708  3025               	movlw	37
   287     0709  00A7               	movwf	initUART@baudRate+1
   288     070A  3080               	movlw	128
   289     070B  00A6               	movwf	initUART@baudRate
   290     070C  120A  118A  2727  120A  118A  	fcall	_initUART
   291     0711                     l675:
   292                           
   293                           ;newmain.c: 27:     {;newmain.c: 28:         TXREG = 'c';
   294     0711  3063               	movlw	99
   295     0712  1283               	bcf	3,5	;RP0=0, select bank0
   296     0713  1303               	bcf	3,6	;RP1=0, select bank0
   297     0714  0099               	movwf	25	;volatile
   298     0715                     l677:
   299                           
   300                           ;newmain.c: 29:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   301     0715  300B               	movlw	11
   302     0716  1283               	bcf	3,5	;RP0=0, select bank0
   303     0717  1303               	bcf	3,6	;RP1=0, select bank0
   304     0718  00AC               	movwf	??_main+2
   305     0719  3026               	movlw	38
   306     071A  00AB               	movwf	??_main+1
   307     071B  305D               	movlw	93
   308     071C  00AA               	movwf	??_main
   309     071D                     u237:
   310     071D  0BAA               	decfsz	??_main,f
   311     071E  2F1D               	goto	u237
   312     071F  0BAB               	decfsz	??_main+1,f
   313     0720  2F1D               	goto	u237
   314     0721  0BAC               	decfsz	??_main+2,f
   315     0722  2F1D               	goto	u237
   316     0723  2F11               	goto	l675
   317     0724  120A  118A  2800   	ljmp	start
   318     0727                     __end_of_main:
   319                           
   320                           	psect	text1
   321     0727                     __ptext1:	
   322 ;; *************** function _initUART *****************
   323 ;; Defined at:
   324 ;;		line 35 in file "newmain.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  baudRate        4    6[BANK0 ] long 
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   338 ;;      Params:         0       4       0       0       0
   339 ;;      Locals:         0       0       0       0       0
   340 ;;      Temps:          4       0       0       0       0
   341 ;;      Totals:         4       4       0       0       0
   342 ;;Total ram usage:        8 bytes
   343 ;; Hardware stack levels used: 1
   344 ;; Hardware stack levels required when called: 1
   345 ;; This function calls:
   346 ;;		___aldiv
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352     0727                     _initUART:	
   353                           ;psect for function _initUART
   354                           
   355     0727                     l667:	
   356                           ;incstack = 0
   357                           ; Regs used in _initUART: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   358                           
   359                           
   360                           ;newmain.c: 35: void initUART(long int baudRate);newmain.c: 36: {;newmain.c: 37:    TRIS
      +                          Cbits.TRISC7 = 1;
   361     0727  1683               	bsf	3,5	;RP0=1, select bank1
   362     0728  1303               	bcf	3,6	;RP1=0, select bank1
   363     0729  1787               	bsf	7,7	;volatile
   364                           
   365                           ;newmain.c: 38:    TRISCbits.TRISC6 = 0;
   366     072A  1307               	bcf	7,6	;volatile
   367                           
   368                           ;newmain.c: 40:    TXSTAbits.TXEN = 1;
   369     072B  1698               	bsf	24,5	;volatile
   370                           
   371                           ;newmain.c: 41:    RCSTAbits.SPEN = 1;
   372     072C  1283               	bcf	3,5	;RP0=0, select bank0
   373     072D  1303               	bcf	3,6	;RP1=0, select bank0
   374     072E  1798               	bsf	24,7	;volatile
   375     072F                     l669:
   376                           
   377                           ;newmain.c: 42:    RCSTA |= 0x90;
   378     072F  3090               	movlw	144
   379     0730  00FF               	movwf	btemp+1
   380     0731  087F               	movf	btemp+1,w
   381     0732  0498               	iorwf	24,f	;volatile
   382     0733                     l671:
   383                           
   384                           ;newmain.c: 43:    SPBRG = (8000000/(long)(64UL*baudRate))-1;
   385     0733  0826               	movf	initUART@baudRate,w
   386     0734  00F9               	movwf	??_initUART
   387     0735  0827               	movf	initUART@baudRate+1,w
   388     0736  00FA               	movwf	??_initUART+1
   389     0737  0828               	movf	initUART@baudRate+2,w
   390     0738  00FB               	movwf	??_initUART+2
   391     0739  0829               	movf	initUART@baudRate+3,w
   392     073A  00FC               	movwf	??_initUART+3
   393     073B  3006               	movlw	6
   394     073C                     u225:
   395     073C  1003               	clrc
   396     073D  0DF9               	rlf	??_initUART,f
   397     073E  0DFA               	rlf	??_initUART+1,f
   398     073F  0DFB               	rlf	??_initUART+2,f
   399     0740  0DFC               	rlf	??_initUART+3,f
   400     0741                     u220:
   401     0741  3EFF               	addlw	-1
   402     0742  1D03               	skipz
   403     0743  2F3C               	goto	u225
   404     0744  087C               	movf	??_initUART+3,w
   405     0745  00F3               	movwf	___aldiv@divisor+3
   406     0746  087B               	movf	??_initUART+2,w
   407     0747  00F2               	movwf	___aldiv@divisor+2
   408     0748  087A               	movf	??_initUART+1,w
   409     0749  00F1               	movwf	___aldiv@divisor+1
   410     074A  0879               	movf	??_initUART,w
   411     074B  00F0               	movwf	___aldiv@divisor
   412     074C  3000               	movlw	0
   413     074D  00F7               	movwf	___aldiv@dividend+3
   414     074E  307A               	movlw	122
   415     074F  00F6               	movwf	___aldiv@dividend+2
   416     0750  3012               	movlw	18
   417     0751  00F5               	movwf	___aldiv@dividend+1
   418     0752  3000               	movlw	0
   419     0753  00F4               	movwf	___aldiv@dividend
   420     0754  120A  118A  275F  120A  118A  	fcall	___aldiv
   421     0759  0870               	movf	?___aldiv,w
   422     075A  3EFF               	addlw	255
   423     075B  1683               	bsf	3,5	;RP0=1, select bank1
   424     075C  1303               	bcf	3,6	;RP1=0, select bank1
   425     075D  0099               	movwf	25	;volatile
   426     075E                     l27:
   427     075E  0008               	return
   428     075F                     __end_of_initUART:
   429                           
   430                           	psect	text2
   431     075F                     __ptext2:	
   432 ;; *************** function ___aldiv *****************
   433 ;; Defined at:
   434 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  divisor         4    0[COMMON] long 
   437 ;;  dividend        4    4[COMMON] long 
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  quotient        4    2[BANK0 ] long 
   440 ;;  sign            1    1[BANK0 ] unsigned char 
   441 ;;  counter         1    0[BANK0 ] unsigned char 
   442 ;; Return value:  Size  Location     Type
   443 ;;                  4    0[COMMON] long 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, btemp+1
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   451 ;;      Params:         8       0       0       0       0
   452 ;;      Locals:         0       6       0       0       0
   453 ;;      Temps:          1       0       0       0       0
   454 ;;      Totals:         9       6       0       0       0
   455 ;;Total ram usage:       15 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_initUART
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464     075F                     ___aldiv:	
   465                           ;psect for function ___aldiv
   466                           
   467     075F                     l625:	
   468                           ;incstack = 0
   469                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   470                           
   471     075F  1283               	bcf	3,5	;RP0=0, select bank0
   472     0760  1303               	bcf	3,6	;RP1=0, select bank0
   473     0761  01A1               	clrf	___aldiv@sign
   474     0762                     l627:
   475     0762  1FF3               	btfss	___aldiv@divisor+3,7
   476     0763  2F65               	goto	u121
   477     0764  2F66               	goto	u120
   478     0765                     u121:
   479     0765  2F73               	goto	l178
   480     0766                     u120:
   481     0766                     l629:
   482     0766  09F0               	comf	___aldiv@divisor,f
   483     0767  09F1               	comf	___aldiv@divisor+1,f
   484     0768  09F2               	comf	___aldiv@divisor+2,f
   485     0769  09F3               	comf	___aldiv@divisor+3,f
   486     076A  0AF0               	incf	___aldiv@divisor,f
   487     076B  1903               	skipnz
   488     076C  0AF1               	incf	___aldiv@divisor+1,f
   489     076D  1903               	skipnz
   490     076E  0AF2               	incf	___aldiv@divisor+2,f
   491     076F  1903               	skipnz
   492     0770  0AF3               	incf	___aldiv@divisor+3,f
   493     0771  01A1               	clrf	___aldiv@sign
   494     0772  0AA1               	incf	___aldiv@sign,f
   495     0773                     l178:
   496     0773  1FF7               	btfss	___aldiv@dividend+3,7
   497     0774  2F76               	goto	u131
   498     0775  2F77               	goto	u130
   499     0776                     u131:
   500     0776  2F86               	goto	l635
   501     0777                     u130:
   502     0777                     l631:
   503     0777  09F4               	comf	___aldiv@dividend,f
   504     0778  09F5               	comf	___aldiv@dividend+1,f
   505     0779  09F6               	comf	___aldiv@dividend+2,f
   506     077A  09F7               	comf	___aldiv@dividend+3,f
   507     077B  0AF4               	incf	___aldiv@dividend,f
   508     077C  1903               	skipnz
   509     077D  0AF5               	incf	___aldiv@dividend+1,f
   510     077E  1903               	skipnz
   511     077F  0AF6               	incf	___aldiv@dividend+2,f
   512     0780  1903               	skipnz
   513     0781  0AF7               	incf	___aldiv@dividend+3,f
   514     0782                     l633:
   515     0782  3001               	movlw	1
   516     0783  00FF               	movwf	btemp+1
   517     0784  087F               	movf	btemp+1,w
   518     0785  06A1               	xorwf	___aldiv@sign,f
   519     0786                     l635:
   520     0786  3000               	movlw	0
   521     0787  00A5               	movwf	___aldiv@quotient+3
   522     0788  3000               	movlw	0
   523     0789  00A4               	movwf	___aldiv@quotient+2
   524     078A  3000               	movlw	0
   525     078B  00A3               	movwf	___aldiv@quotient+1
   526     078C  3000               	movlw	0
   527     078D  00A2               	movwf	___aldiv@quotient
   528     078E                     l637:
   529     078E  0873               	movf	___aldiv@divisor+3,w
   530     078F  0472               	iorwf	___aldiv@divisor+2,w
   531     0790  0471               	iorwf	___aldiv@divisor+1,w
   532     0791  0470               	iorwf	___aldiv@divisor,w
   533     0792  1903               	skipnz
   534     0793  2F95               	goto	u141
   535     0794  2F96               	goto	u140
   536     0795                     u141:
   537     0795  2FE3               	goto	l659
   538     0796                     u140:
   539     0796                     l639:
   540     0796  01A0               	clrf	___aldiv@counter
   541     0797  0AA0               	incf	___aldiv@counter,f
   542     0798  2FA6               	goto	l645
   543     0799                     l641:
   544     0799  3001               	movlw	1
   545     079A  00F8               	movwf	??___aldiv
   546     079B                     u155:
   547     079B  1003               	clrc
   548     079C  0DF0               	rlf	___aldiv@divisor,f
   549     079D  0DF1               	rlf	___aldiv@divisor+1,f
   550     079E  0DF2               	rlf	___aldiv@divisor+2,f
   551     079F  0DF3               	rlf	___aldiv@divisor+3,f
   552     07A0  0BF8               	decfsz	??___aldiv,f
   553     07A1  2F9B               	goto	u155
   554     07A2                     l643:
   555     07A2  3001               	movlw	1
   556     07A3  00FF               	movwf	btemp+1
   557     07A4  087F               	movf	btemp+1,w
   558     07A5  07A0               	addwf	___aldiv@counter,f
   559     07A6                     l645:
   560     07A6  1FF3               	btfss	___aldiv@divisor+3,7
   561     07A7  2FA9               	goto	u161
   562     07A8  2FAA               	goto	u160
   563     07A9                     u161:
   564     07A9  2F99               	goto	l641
   565     07AA                     u160:
   566     07AA                     l647:
   567     07AA  3001               	movlw	1
   568     07AB  00F8               	movwf	??___aldiv
   569     07AC                     u175:
   570     07AC  1003               	clrc
   571     07AD  0DA2               	rlf	___aldiv@quotient,f
   572     07AE  0DA3               	rlf	___aldiv@quotient+1,f
   573     07AF  0DA4               	rlf	___aldiv@quotient+2,f
   574     07B0  0DA5               	rlf	___aldiv@quotient+3,f
   575     07B1  0BF8               	decfsz	??___aldiv,f
   576     07B2  2FAC               	goto	u175
   577     07B3                     l649:
   578     07B3  0873               	movf	___aldiv@divisor+3,w
   579     07B4  0277               	subwf	___aldiv@dividend+3,w
   580     07B5  1D03               	skipz
   581     07B6  2FC1               	goto	u185
   582     07B7  0872               	movf	___aldiv@divisor+2,w
   583     07B8  0276               	subwf	___aldiv@dividend+2,w
   584     07B9  1D03               	skipz
   585     07BA  2FC1               	goto	u185
   586     07BB  0871               	movf	___aldiv@divisor+1,w
   587     07BC  0275               	subwf	___aldiv@dividend+1,w
   588     07BD  1D03               	skipz
   589     07BE  2FC1               	goto	u185
   590     07BF  0870               	movf	___aldiv@divisor,w
   591     07C0  0274               	subwf	___aldiv@dividend,w
   592     07C1                     u185:
   593     07C1  1C03               	skipc
   594     07C2  2FC4               	goto	u181
   595     07C3  2FC5               	goto	u180
   596     07C4                     u181:
   597     07C4  2FD4               	goto	l655
   598     07C5                     u180:
   599     07C5                     l651:
   600     07C5  0870               	movf	___aldiv@divisor,w
   601     07C6  02F4               	subwf	___aldiv@dividend,f
   602     07C7  0871               	movf	___aldiv@divisor+1,w
   603     07C8  1C03               	skipc
   604     07C9  0F71               	incfsz	___aldiv@divisor+1,w
   605     07CA  02F5               	subwf	___aldiv@dividend+1,f
   606     07CB  0872               	movf	___aldiv@divisor+2,w
   607     07CC  1C03               	skipc
   608     07CD  0F72               	incfsz	___aldiv@divisor+2,w
   609     07CE  02F6               	subwf	___aldiv@dividend+2,f
   610     07CF  0873               	movf	___aldiv@divisor+3,w
   611     07D0  1C03               	skipc
   612     07D1  0F73               	incfsz	___aldiv@divisor+3,w
   613     07D2  02F7               	subwf	___aldiv@dividend+3,f
   614     07D3                     l653:
   615     07D3  1422               	bsf	___aldiv@quotient,0
   616     07D4                     l655:
   617     07D4  3001               	movlw	1
   618     07D5                     u195:
   619     07D5  1003               	clrc
   620     07D6  0CF3               	rrf	___aldiv@divisor+3,f
   621     07D7  0CF2               	rrf	___aldiv@divisor+2,f
   622     07D8  0CF1               	rrf	___aldiv@divisor+1,f
   623     07D9  0CF0               	rrf	___aldiv@divisor,f
   624     07DA  3EFF               	addlw	-1
   625     07DB  1D03               	skipz
   626     07DC  2FD5               	goto	u195
   627     07DD                     l657:
   628     07DD  3001               	movlw	1
   629     07DE  02A0               	subwf	___aldiv@counter,f
   630     07DF  1D03               	btfss	3,2
   631     07E0  2FE2               	goto	u201
   632     07E1  2FE3               	goto	u200
   633     07E2                     u201:
   634     07E2  2FAA               	goto	l647
   635     07E3                     u200:
   636     07E3                     l659:
   637     07E3  0821               	movf	___aldiv@sign,w
   638     07E4  1903               	btfsc	3,2
   639     07E5  2FE7               	goto	u211
   640     07E6  2FE8               	goto	u210
   641     07E7                     u211:
   642     07E7  2FF3               	goto	l663
   643     07E8                     u210:
   644     07E8                     l661:
   645     07E8  09A2               	comf	___aldiv@quotient,f
   646     07E9  09A3               	comf	___aldiv@quotient+1,f
   647     07EA  09A4               	comf	___aldiv@quotient+2,f
   648     07EB  09A5               	comf	___aldiv@quotient+3,f
   649     07EC  0AA2               	incf	___aldiv@quotient,f
   650     07ED  1903               	skipnz
   651     07EE  0AA3               	incf	___aldiv@quotient+1,f
   652     07EF  1903               	skipnz
   653     07F0  0AA4               	incf	___aldiv@quotient+2,f
   654     07F1  1903               	skipnz
   655     07F2  0AA5               	incf	___aldiv@quotient+3,f
   656     07F3                     l663:
   657     07F3  0825               	movf	___aldiv@quotient+3,w
   658     07F4  00F3               	movwf	?___aldiv+3
   659     07F5  0824               	movf	___aldiv@quotient+2,w
   660     07F6  00F2               	movwf	?___aldiv+2
   661     07F7  0823               	movf	___aldiv@quotient+1,w
   662     07F8  00F1               	movwf	?___aldiv+1
   663     07F9  0822               	movf	___aldiv@quotient,w
   664     07FA  00F0               	movwf	?___aldiv
   665     07FB                     l188:
   666     07FB  0008               	return
   667     07FC                     __end_of___aldiv:
   668     007E                     btemp	set	126	;btemp
   669     007E                     wtemp0	set	126
   670                           
   671                           	psect	config
   672                           
   673                           ;Config register CONFIG @ 0x2007
   674                           ;	Oscillator Selection bits
   675                           ;	FOSC = HS, HS oscillator
   676                           ;	Watchdog Timer Enable bit
   677                           ;	WDTE = OFF, WDT disabled
   678                           ;	Power-up Timer Enable bit
   679                           ;	PWRTE = ON, PWRT enabled
   680                           ;	Brown-out Reset Enable bit
   681                           ;	BOREN = ON, BOR enabled
   682                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   683                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   684                           ;	Data EEPROM Memory Code Protection bit
   685                           ;	CPD = OFF, Data EEPROM code protection off
   686                           ;	Flash Program Memory Write Enable bits
   687                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   688                           ;	In-Circuit Debugger Mode bit
   689                           ;	DEBUG = 0x1, unprogrammed default
   690                           ;	Flash Program Memory Code Protection bit
   691                           ;	CP = OFF, Code protection off
   692     2007                     	org	8199
   693     2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     13      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initUART
    _initUART->___aldiv

Critical Paths under _main in BANK0

    _main->_initUART
    _initUART->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     550
                                             10 BANK0      3     3      0
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             8     4      4     550
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec 01 10:24:23 2023

                     l27 075E                      l178 0773                      l188 07FB  
                    l631 0777                      l641 0799                      l633 0782  
                    l625 075F                      l651 07C5                      l643 07A2  
                    l635 0786                      l627 0762                      l661 07E8  
                    l653 07D3                      l645 07A6                      l637 078E  
                    l629 0766                      l663 07F3                      l655 07D4  
                    l647 07AA                      l639 0796                      l671 0733  
                    l657 07DD                      l649 07B3                      l673 0702  
                    l659 07E3                      l667 0727                      l675 0711  
                    l669 072F                      l677 0715                      u200 07E3  
                    u120 0766                      u201 07E2                      u121 0765  
                    u210 07E8                      u130 0777                      u211 07E7  
                    u131 0776                      u140 0796                      u220 0741  
                    u141 0795                      u160 07AA                      u161 07A9  
                    u225 073C                      u155 079B                      u180 07C5  
                    u181 07C4                      u237 071D                      u175 07AC  
                    u185 07C1                      u195 07D5                     _main 0702  
                   btemp 007E                     start 0000          __end_of___aldiv 07FC  
                  ?_main 0070                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0727                   ??_main 002A  
              ??___aldiv 0078         __end_of_initUART 075F         initUART@baudRate 0026  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0702  
              ?_initUART 0026                  ___aldiv 075F                  __ptext1 0727  
                __ptext2 075F         ___aldiv@dividend 0074     end_of_initialization 07FC  
             ??_initUART 0079                _RCSTAbits 0018         ___aldiv@quotient 0022  
              _TRISCbits 0087                _TXSTAbits 0098      start_initialization 07FC  
              ___latbits 0002            __pcstackBANK0 0020                 ?___aldiv 0070  
        ___aldiv@divisor 0070          ___aldiv@counter 0020                 _initUART 0727  
           ___aldiv@sign 0021  
