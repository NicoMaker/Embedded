

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Oct 18 16:34:39 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F628A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     000A                     	;# 
    54     000B                     	;# 
    55     000C                     	;# 
    56     000E                     	;# 
    57     000E                     	;# 
    58     000F                     	;# 
    59     0010                     	;# 
    60     0011                     	;# 
    61     0012                     	;# 
    62     0015                     	;# 
    63     0015                     	;# 
    64     0016                     	;# 
    65     0017                     	;# 
    66     0018                     	;# 
    67     0019                     	;# 
    68     001A                     	;# 
    69     001F                     	;# 
    70     0081                     	;# 
    71     0085                     	;# 
    72     0086                     	;# 
    73     008C                     	;# 
    74     008E                     	;# 
    75     0092                     	;# 
    76     0098                     	;# 
    77     0099                     	;# 
    78     009A                     	;# 
    79     009B                     	;# 
    80     009C                     	;# 
    81     009D                     	;# 
    82     009F                     	;# 
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     008C                     	;# 
   111     008E                     	;# 
   112     0092                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009F                     	;# 
   120                           
   121                           	psect	idataBANK0
   122     07B1                     __pidataBANK0:
   123                           
   124                           ;initializer for _d
   125     07B1  34EE               	retlw	238
   126     07B2  3428               	retlw	40
   127     07B3  34CD               	retlw	205
   128     07B4  346D               	retlw	109
   129     07B5  342B               	retlw	43
   130     07B6  3467               	retlw	103
   131     07B7  34E7               	retlw	231
   132     07B8  342C               	retlw	44
   133     07B9  34EF               	retlw	239
   134     07BA  346F               	retlw	111
   135     0006                     _PORTB	set	6
   136     0086                     _TRISB	set	134
   137                           
   138                           	psect	cinit
   139     07EA                     start_initialization:	
   140                           ; #config settings
   141                           
   142     07EA                     __initialization:
   143                           
   144                           ; Initialize objects allocated to BANK0
   145     07EA  27B1               	fcall	__pidataBANK0	;fetch initializer
   146     07EB  00A0               	movwf	__pdataBANK0& (0+127)
   147     07EC  27B2               	fcall	__pidataBANK0+1	;fetch initializer
   148     07ED  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   149     07EE  27B3               	fcall	__pidataBANK0+2	;fetch initializer
   150     07EF  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   151     07F0  27B4               	fcall	__pidataBANK0+3	;fetch initializer
   152     07F1  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   153     07F2  27B5               	fcall	__pidataBANK0+4	;fetch initializer
   154     07F3  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   155     07F4  27B6               	fcall	__pidataBANK0+5	;fetch initializer
   156     07F5  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   157     07F6  27B7               	fcall	__pidataBANK0+6	;fetch initializer
   158     07F7  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   159     07F8  27B8               	fcall	__pidataBANK0+7	;fetch initializer
   160     07F9  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   161     07FA  27B9               	fcall	__pidataBANK0+8	;fetch initializer
   162     07FB  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   163     07FC  27BA               	fcall	__pidataBANK0+9	;fetch initializer
   164     07FD  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   165     07FE                     end_of_initialization:	
   166                           ;End of C runtime variable initialization code
   167                           
   168     07FE                     __end_of__initialization:
   169     07FE  0183               	clrf	3
   170     07FF  2FBB               	ljmp	_main	;jump to C main() function
   171                           
   172                           	psect	dataBANK0
   173     0020                     __pdataBANK0:
   174     0020                     _d:
   175     0020                     	ds	10
   176                           
   177                           	psect	cstackCOMMON
   178     0070                     __pcstackCOMMON:
   179     0070                     ?_main:
   180     0070                     ??_main:	
   181                           ; 1 bytes @ 0x0
   182                           
   183                           
   184                           ; 1 bytes @ 0x0
   185     0070                     	ds	3
   186     0073                     main@i:
   187                           
   188                           ; 2 bytes @ 0x3
   189     0073                     	ds	2
   190                           
   191                           	psect	maintext
   192     07BB                     __pmaintext:	
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 26 in file "main.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;  i               2    3[COMMON] int 
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   207 ;; Tracked objects:
   208 ;;		On entry : B00/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   212 ;;      Params:         0       0       0       0
   213 ;;      Locals:         2       0       0       0
   214 ;;      Temps:          3       0       0       0
   215 ;;      Totals:         5       0       0       0
   216 ;;Total ram usage:        5 bytes
   217 ;; This function calls:
   218 ;;		Nothing
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224     07BB                     _main:	
   225                           ;psect for function _main
   226                           
   227     07BB                     l576:	
   228                           ;incstack = 0
   229                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   230                           
   231                           
   232                           ;main.c: 28:     TRISB = 0x00;
   233     07BB  1683               	bsf	3,5	;RP0=1, select bank1
   234     07BC  1303               	bcf	3,6	;RP1=0, select bank1
   235     07BD  0186               	clrf	6	;volatile
   236     07BE                     l13:	
   237                           ;main.c: 29:     while(1){
   238                           
   239                           
   240                           ;main.c: 30:         for(int i = 0; i < 10; i++)
   241     07BE  01F3               	clrf	main@i
   242     07BF  01F4               	clrf	main@i+1
   243     07C0                     l582:
   244                           
   245                           ;main.c: 31:         {;main.c: 32:             PORTB = d[i];
   246     07C0  0873               	movf	main@i,w
   247     07C1  3E20               	addlw	(low (_d| 0))& (0+255)
   248     07C2  0084               	movwf	4
   249     07C3  1383               	bcf	3,7	;select IRP bank0
   250     07C4  0800               	movf	0,w
   251     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   252     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   253     07C7  0086               	movwf	6	;volatile
   254     07C8                     l584:
   255                           
   256                           ;main.c: 33:             _delay((unsigned long)((1000)*(8000000/4000.0)));
   257     07C8  300B               	movlw	11
   258     07C9  00F2               	movwf	??_main+2
   259     07CA  3026               	movlw	38
   260     07CB  00F1               	movwf	??_main+1
   261     07CC  305D               	movlw	93
   262     07CD  00F0               	movwf	??_main
   263     07CE                     u37:
   264     07CE  0BF0               	decfsz	??_main,f
   265     07CF  2FCE               	goto	u37
   266     07D0  0BF1               	decfsz	??_main+1,f
   267     07D1  2FCE               	goto	u37
   268     07D2  0BF2               	decfsz	??_main+2,f
   269     07D3  2FCE               	goto	u37
   270     07D4  2FD5               	nop2
   271     07D5                     l586:
   272                           
   273                           ;main.c: 34:         }
   274     07D5  3001               	movlw	1
   275     07D6  07F3               	addwf	main@i,f
   276     07D7  1803               	skipnc
   277     07D8  0AF4               	incf	main@i+1,f
   278     07D9  3000               	movlw	0
   279     07DA  07F4               	addwf	main@i+1,f
   280     07DB                     l588:
   281     07DB  0874               	movf	main@i+1,w
   282     07DC  3A80               	xorlw	128
   283     07DD  00FF               	movwf	btemp+1
   284     07DE  3080               	movlw	128
   285     07DF  027F               	subwf	btemp+1,w
   286     07E0  1D03               	skipz
   287     07E1  2FE4               	goto	u25
   288     07E2  300A               	movlw	10
   289     07E3  0273               	subwf	main@i,w
   290     07E4                     u25:
   291     07E4  1C03               	skipc
   292     07E5  2FE7               	goto	u21
   293     07E6  2FE8               	goto	u20
   294     07E7                     u21:
   295     07E7  2FC0               	goto	l582
   296     07E8                     u20:
   297     07E8  2FBE               	goto	l13
   298     07E9  2800               	ljmp	start
   299     07EA                     __end_of_main:
   300     007E                     btemp	set	126	;btemp
   301     007E                     wtemp0	set	126
   302                           
   303                           	psect	config
   304                           
   305                           ;Config register CONFIG @ 0x2007
   306                           ;	Oscillator Selection bits
   307                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   308                           ;	Watchdog Timer Enable bit
   309                           ;	WDTE = OFF, WDT disabled
   310                           ;	Power-up Timer Enable bit
   311                           ;	PWRTE = ON, PWRT enabled
   312                           ;	RA5/MCLR/VPP Pin Function Select bit
   313                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   314                           ;	Brown-out Detect Enable bit
   315                           ;	BOREN = ON, BOD enabled
   316                           ;	Low-Voltage Programming Enable bit
   317                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   318                           ;	Data EE Memory Code Protection bit
   319                           ;	CPD = OFF, Data memory code protection off
   320                           ;	Flash Program Memory Code Protection bit
   321                           ;	CP = OFF, Code protection off
   322     2007                     	org	8199
   323     2007  3F62               	dw	16226

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0      10
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      68
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       3       12.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      10        0.0%
ABS                  0      0       F       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Oct 18 16:34:39 2023

                      _d 0020                       l13 07BE                       u20 07E8  
                     u21 07E7                       u25 07E4                       u37 07CE  
                    l582 07C0                      l584 07C8                      l576 07BB  
                    l586 07D5                      l588 07DB                      fsr0 0004  
                    indf 0000                     _main 07BB                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    main@i 0073                    status 0003  
                  wtemp0 007E          __initialization 07EA             __end_of_main 07EA  
                 ??_main 0070  __end_of__initialization 07FE           __pcstackCOMMON 0070  
           __pidataBANK0 07B1               __pmaintext 07BB     end_of_initialization 07FE  
    start_initialization 07EA              __pdataBANK0 0020                ___latbits 0000  
