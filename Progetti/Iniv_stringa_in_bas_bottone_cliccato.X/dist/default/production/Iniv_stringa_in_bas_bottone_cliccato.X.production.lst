

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 07 16:14:16 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16LF877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	strings
   173     0003                     __pstrings:
   174     0003                     stringtab:
   175     0003                     __stringtab:
   176     0003                     stringcode:	
   177                           ;	String table - string pointers are 1 byte each
   178                           
   179     0003                     stringdir:
   180     0003  3000               	movlw	high stringdir
   181     0004  008A               	movwf	10
   182     0005  0804               	movf	4,w
   183     0006  0A84               	incf	4,f
   184     0007  0782               	addwf	2,f
   185     0008                     __stringbase:
   186     0008  3400               	retlw	0
   187     0009                     __end_of__stringtab:
   188     0009                     _c:
   189     0009  34FE               	retlw	254
   190     000A  34FD               	retlw	253
   191     000B  34FB               	retlw	251
   192     000C                     __end_of_c:
   193     000C                     STR_1:
   194     000C  3466               	retlw	102	;'f'
   195     000D  3469               	retlw	105	;'i'
   196     000E  3476               	retlw	118	;'v'
   197     000F  3465               	retlw	101	;'e'
   198     0010  3400               	retlw	0
   199                           
   200                           	psect	nvBANK0
   201     002A                     __pnvBANK0:
   202     002A                     _letturabottone:
   203     002A                     	ds	1
   204     0019                     _TXREG	set	25
   205     000C                     _PIR1bits	set	12
   206     0018                     _RCSTA	set	24
   207     0018                     _RCSTAbits	set	24
   208     000B                     _INTCON	set	11
   209     0008                     _PORTD	set	8
   210     0006                     _PORTB	set	6
   211     0099                     _SPBRG	set	153
   212     0098                     _TXSTAbits	set	152
   213     0087                     _TRISCbits	set	135
   214     008C                     _PIE1	set	140
   215     0086                     _TRISB	set	134
   216     0088                     _TRISD	set	136
   217                           
   218                           	psect	cinit
   219     07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FC                     __initialization:
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2EA2   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_BottoneCliccato:
   233     0070                     ??_BottoneCliccato:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_SendUARTString:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ??_SendUARTString:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ?_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?___aldiv:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     SendUARTString@i:	
   249                           ; 4 bytes @ 0x0
   250                           
   251     0070                     ___aldiv@divisor:	
   252                           ; 2 bytes @ 0x0
   253                           
   254                           
   255                           ; 4 bytes @ 0x0
   256     0070                     	ds	1
   257     0071                     BottoneCliccato@read:
   258                           
   259                           ; 1 bytes @ 0x1
   260     0071                     	ds	1
   261     0072                     BottoneCliccato@k:
   262     0072                     SendUARTString@str:	
   263                           ; 1 bytes @ 0x2
   264                           
   265                           
   266                           ; 1 bytes @ 0x2
   267     0072                     	ds	1
   268     0073                     BottoneCliccato@i:
   269                           
   270                           ; 1 bytes @ 0x3
   271     0073                     	ds	1
   272     0074                     BottoneCliccato@j:
   273     0074                     ___aldiv@dividend:	
   274                           ; 1 bytes @ 0x4
   275                           
   276                           
   277                           ; 4 bytes @ 0x4
   278     0074                     	ds	4
   279     0078                     ??___aldiv:
   280                           
   281                           ; 1 bytes @ 0x8
   282     0078                     	ds	1
   283     0079                     ??_initUART:
   284                           
   285                           ; 1 bytes @ 0x9
   286     0079                     	ds	4
   287     007D                     ??_main:
   288                           
   289                           	psect	cstackBANK0
   290     0020                     __pcstackBANK0:	
   291                           ; 1 bytes @ 0xD
   292                           
   293     0020                     ___aldiv@counter:
   294                           
   295                           ; 1 bytes @ 0x0
   296     0020                     	ds	1
   297     0021                     ___aldiv@sign:
   298                           
   299                           ; 1 bytes @ 0x1
   300     0021                     	ds	1
   301     0022                     ___aldiv@quotient:
   302                           
   303                           ; 4 bytes @ 0x2
   304     0022                     	ds	4
   305     0026                     ?_initUART:
   306     0026                     initUART@baudRate:	
   307                           ; 1 bytes @ 0x6
   308                           
   309                           
   310                           ; 4 bytes @ 0x6
   311     0026                     	ds	4
   312                           
   313                           	psect	maintext
   314     06A2                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 30 in file "newmain.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : B00/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels required when called: 2
   340 ;; This function calls:
   341 ;;		_BottoneCliccato
   342 ;;		_SendUARTString
   343 ;;		_initUART
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349     06A2                     _main:	
   350                           ;psect for function _main
   351                           
   352     06A2                     l831:	
   353                           ;incstack = 0
   354                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   355                           
   356                           
   357                           ;newmain.c: 32:     initUART(9600);
   358     06A2  3000               	movlw	0
   359     06A3  1283               	bcf	3,5	;RP0=0, select bank0
   360     06A4  1303               	bcf	3,6	;RP1=0, select bank0
   361     06A5  00A9               	movwf	initUART@baudRate+3
   362     06A6  3000               	movlw	0
   363     06A7  00A8               	movwf	initUART@baudRate+2
   364     06A8  3025               	movlw	37
   365     06A9  00A7               	movwf	initUART@baudRate+1
   366     06AA  3080               	movlw	128
   367     06AB  00A6               	movwf	initUART@baudRate
   368     06AC  120A  118A  26C9  120A  118A  	fcall	_initUART
   369     06B1                     l833:
   370                           
   371                           ;newmain.c: 34:         letturabottone = BottoneCliccato();
   372     06B1  120A  118A  2706  120A  118A  	fcall	_BottoneCliccato
   373     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   374     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   375     06B8  00AA               	movwf	_letturabottone
   376     06B9                     l835:
   377                           
   378                           ;newmain.c: 36:         if (letturabottone == 6)
   379     06B9  3006               	movlw	6
   380     06BA  062A               	xorwf	_letturabottone,w
   381     06BB  1D03               	btfss	3,2
   382     06BC  2EBE               	goto	u381
   383     06BD  2EBF               	goto	u380
   384     06BE                     u381:
   385     06BE  2EB1               	goto	l833
   386     06BF                     u380:
   387     06BF                     l837:
   388                           
   389                           ;newmain.c: 37:             SendUARTString("five");
   390     06BF  3004               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   391     06C0  120A  118A  267B  120A  118A  	fcall	_SendUARTString
   392     06C5  2EB1               	goto	l833
   393     06C6  120A  118A  2800   	ljmp	start
   394     06C9                     __end_of_main:
   395                           
   396                           	psect	text1
   397     06C9                     __ptext1:	
   398 ;; *************** function _initUART *****************
   399 ;; Defined at:
   400 ;;		line 66 in file "newmain.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  baudRate        4    6[BANK0 ] long 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         0       4       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          4       0       0       0       0
   417 ;;      Totals:         4       4       0       0       0
   418 ;;Total ram usage:        8 bytes
   419 ;; Hardware stack levels used: 1
   420 ;; Hardware stack levels required when called: 1
   421 ;; This function calls:
   422 ;;		___aldiv
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428     06C9                     _initUART:	
   429                           ;psect for function _initUART
   430                           
   431     06C9                     l767:	
   432                           ;incstack = 0
   433                           ; Regs used in _initUART: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   434                           
   435                           
   436                           ;newmain.c: 67:     INTCON |= 0xC0;
   437     06C9  30C0               	movlw	192
   438     06CA  00FF               	movwf	btemp+1
   439     06CB  087F               	movf	btemp+1,w
   440     06CC  048B               	iorwf	11,f	;volatile
   441     06CD                     l769:
   442                           
   443                           ;newmain.c: 68:     PIE1 |= 0X20;
   444     06CD  1683               	bsf	3,5	;RP0=1, select bank1
   445     06CE  1303               	bcf	3,6	;RP1=0, select bank1
   446     06CF  168C               	bsf	12,5	;volatile
   447     06D0                     l771:
   448                           
   449                           ;newmain.c: 71:     TRISCbits.TRISC7 = 1;
   450     06D0  1787               	bsf	7,7	;volatile
   451     06D1                     l773:
   452                           
   453                           ;newmain.c: 72:     TRISCbits.TRISC6 = 0;
   454     06D1  1307               	bcf	7,6	;volatile
   455     06D2                     l775:
   456                           
   457                           ;newmain.c: 74:     TXSTAbits.TXEN = 1;
   458     06D2  1698               	bsf	24,5	;volatile
   459     06D3                     l777:
   460                           
   461                           ;newmain.c: 75:     RCSTAbits.SPEN = 1;
   462     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   463     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   464     06D5  1798               	bsf	24,7	;volatile
   465                           
   466                           ;newmain.c: 76:     RCSTA |= 0x90;
   467     06D6  3090               	movlw	144
   468     06D7  00FF               	movwf	btemp+1
   469     06D8  087F               	movf	btemp+1,w
   470     06D9  0498               	iorwf	24,f	;volatile
   471     06DA                     l779:
   472                           
   473                           ;newmain.c: 77:     SPBRG = (8000000 / (long) (64UL * baudRate)) - 1;
   474     06DA  0826               	movf	initUART@baudRate,w
   475     06DB  00F9               	movwf	??_initUART
   476     06DC  0827               	movf	initUART@baudRate+1,w
   477     06DD  00FA               	movwf	??_initUART+1
   478     06DE  0828               	movf	initUART@baudRate+2,w
   479     06DF  00FB               	movwf	??_initUART+2
   480     06E0  0829               	movf	initUART@baudRate+3,w
   481     06E1  00FC               	movwf	??_initUART+3
   482     06E2  3006               	movlw	6
   483     06E3                     u305:
   484     06E3  1003               	clrc
   485     06E4  0DF9               	rlf	??_initUART,f
   486     06E5  0DFA               	rlf	??_initUART+1,f
   487     06E6  0DFB               	rlf	??_initUART+2,f
   488     06E7  0DFC               	rlf	??_initUART+3,f
   489     06E8                     u300:
   490     06E8  3EFF               	addlw	-1
   491     06E9  1D03               	skipz
   492     06EA  2EE3               	goto	u305
   493     06EB  087C               	movf	??_initUART+3,w
   494     06EC  00F3               	movwf	___aldiv@divisor+3
   495     06ED  087B               	movf	??_initUART+2,w
   496     06EE  00F2               	movwf	___aldiv@divisor+2
   497     06EF  087A               	movf	??_initUART+1,w
   498     06F0  00F1               	movwf	___aldiv@divisor+1
   499     06F1  0879               	movf	??_initUART,w
   500     06F2  00F0               	movwf	___aldiv@divisor
   501     06F3  3000               	movlw	0
   502     06F4  00F7               	movwf	___aldiv@dividend+3
   503     06F5  307A               	movlw	122
   504     06F6  00F6               	movwf	___aldiv@dividend+2
   505     06F7  3012               	movlw	18
   506     06F8  00F5               	movwf	___aldiv@dividend+1
   507     06F9  3000               	movlw	0
   508     06FA  00F4               	movwf	___aldiv@dividend
   509     06FB  120A  118A  275F  120A  118A  	fcall	___aldiv
   510     0700  0870               	movf	?___aldiv,w
   511     0701  3EFF               	addlw	255
   512     0702  1683               	bsf	3,5	;RP0=1, select bank1
   513     0703  1303               	bcf	3,6	;RP1=0, select bank1
   514     0704  0099               	movwf	25	;volatile
   515     0705                     l58:
   516     0705  0008               	return
   517     0706                     __end_of_initUART:
   518                           
   519                           	psect	text2
   520     075F                     __ptext2:	
   521 ;; *************** function ___aldiv *****************
   522 ;; Defined at:
   523 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  divisor         4    0[COMMON] long 
   526 ;;  dividend        4    4[COMMON] long 
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  quotient        4    2[BANK0 ] long 
   529 ;;  sign            1    1[BANK0 ] unsigned char 
   530 ;;  counter         1    0[BANK0 ] unsigned char 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  4    0[COMMON] long 
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, btemp+1
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         8       0       0       0       0
   541 ;;      Locals:         0       6       0       0       0
   542 ;;      Temps:          1       0       0       0       0
   543 ;;      Totals:         9       6       0       0       0
   544 ;;Total ram usage:       15 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_initUART
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     075F                     ___aldiv:	
   554                           ;psect for function ___aldiv
   555                           
   556     075F                     l725:	
   557                           ;incstack = 0
   558                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   559                           
   560     075F  1283               	bcf	3,5	;RP0=0, select bank0
   561     0760  1303               	bcf	3,6	;RP1=0, select bank0
   562     0761  01A1               	clrf	___aldiv@sign
   563     0762                     l727:
   564     0762  1FF3               	btfss	___aldiv@divisor+3,7
   565     0763  2F65               	goto	u201
   566     0764  2F66               	goto	u200
   567     0765                     u201:
   568     0765  2F73               	goto	l218
   569     0766                     u200:
   570     0766                     l729:
   571     0766  09F0               	comf	___aldiv@divisor,f
   572     0767  09F1               	comf	___aldiv@divisor+1,f
   573     0768  09F2               	comf	___aldiv@divisor+2,f
   574     0769  09F3               	comf	___aldiv@divisor+3,f
   575     076A  0AF0               	incf	___aldiv@divisor,f
   576     076B  1903               	skipnz
   577     076C  0AF1               	incf	___aldiv@divisor+1,f
   578     076D  1903               	skipnz
   579     076E  0AF2               	incf	___aldiv@divisor+2,f
   580     076F  1903               	skipnz
   581     0770  0AF3               	incf	___aldiv@divisor+3,f
   582     0771  01A1               	clrf	___aldiv@sign
   583     0772  0AA1               	incf	___aldiv@sign,f
   584     0773                     l218:
   585     0773  1FF7               	btfss	___aldiv@dividend+3,7
   586     0774  2F76               	goto	u211
   587     0775  2F77               	goto	u210
   588     0776                     u211:
   589     0776  2F86               	goto	l735
   590     0777                     u210:
   591     0777                     l731:
   592     0777  09F4               	comf	___aldiv@dividend,f
   593     0778  09F5               	comf	___aldiv@dividend+1,f
   594     0779  09F6               	comf	___aldiv@dividend+2,f
   595     077A  09F7               	comf	___aldiv@dividend+3,f
   596     077B  0AF4               	incf	___aldiv@dividend,f
   597     077C  1903               	skipnz
   598     077D  0AF5               	incf	___aldiv@dividend+1,f
   599     077E  1903               	skipnz
   600     077F  0AF6               	incf	___aldiv@dividend+2,f
   601     0780  1903               	skipnz
   602     0781  0AF7               	incf	___aldiv@dividend+3,f
   603     0782                     l733:
   604     0782  3001               	movlw	1
   605     0783  00FF               	movwf	btemp+1
   606     0784  087F               	movf	btemp+1,w
   607     0785  06A1               	xorwf	___aldiv@sign,f
   608     0786                     l735:
   609     0786  3000               	movlw	0
   610     0787  00A5               	movwf	___aldiv@quotient+3
   611     0788  3000               	movlw	0
   612     0789  00A4               	movwf	___aldiv@quotient+2
   613     078A  3000               	movlw	0
   614     078B  00A3               	movwf	___aldiv@quotient+1
   615     078C  3000               	movlw	0
   616     078D  00A2               	movwf	___aldiv@quotient
   617     078E                     l737:
   618     078E  0873               	movf	___aldiv@divisor+3,w
   619     078F  0472               	iorwf	___aldiv@divisor+2,w
   620     0790  0471               	iorwf	___aldiv@divisor+1,w
   621     0791  0470               	iorwf	___aldiv@divisor,w
   622     0792  1903               	skipnz
   623     0793  2F95               	goto	u221
   624     0794  2F96               	goto	u220
   625     0795                     u221:
   626     0795  2FE3               	goto	l759
   627     0796                     u220:
   628     0796                     l739:
   629     0796  01A0               	clrf	___aldiv@counter
   630     0797  0AA0               	incf	___aldiv@counter,f
   631     0798  2FA6               	goto	l745
   632     0799                     l741:
   633     0799  3001               	movlw	1
   634     079A  00F8               	movwf	??___aldiv
   635     079B                     u235:
   636     079B  1003               	clrc
   637     079C  0DF0               	rlf	___aldiv@divisor,f
   638     079D  0DF1               	rlf	___aldiv@divisor+1,f
   639     079E  0DF2               	rlf	___aldiv@divisor+2,f
   640     079F  0DF3               	rlf	___aldiv@divisor+3,f
   641     07A0  0BF8               	decfsz	??___aldiv,f
   642     07A1  2F9B               	goto	u235
   643     07A2                     l743:
   644     07A2  3001               	movlw	1
   645     07A3  00FF               	movwf	btemp+1
   646     07A4  087F               	movf	btemp+1,w
   647     07A5  07A0               	addwf	___aldiv@counter,f
   648     07A6                     l745:
   649     07A6  1FF3               	btfss	___aldiv@divisor+3,7
   650     07A7  2FA9               	goto	u241
   651     07A8  2FAA               	goto	u240
   652     07A9                     u241:
   653     07A9  2F99               	goto	l741
   654     07AA                     u240:
   655     07AA                     l747:
   656     07AA  3001               	movlw	1
   657     07AB  00F8               	movwf	??___aldiv
   658     07AC                     u255:
   659     07AC  1003               	clrc
   660     07AD  0DA2               	rlf	___aldiv@quotient,f
   661     07AE  0DA3               	rlf	___aldiv@quotient+1,f
   662     07AF  0DA4               	rlf	___aldiv@quotient+2,f
   663     07B0  0DA5               	rlf	___aldiv@quotient+3,f
   664     07B1  0BF8               	decfsz	??___aldiv,f
   665     07B2  2FAC               	goto	u255
   666     07B3                     l749:
   667     07B3  0873               	movf	___aldiv@divisor+3,w
   668     07B4  0277               	subwf	___aldiv@dividend+3,w
   669     07B5  1D03               	skipz
   670     07B6  2FC1               	goto	u265
   671     07B7  0872               	movf	___aldiv@divisor+2,w
   672     07B8  0276               	subwf	___aldiv@dividend+2,w
   673     07B9  1D03               	skipz
   674     07BA  2FC1               	goto	u265
   675     07BB  0871               	movf	___aldiv@divisor+1,w
   676     07BC  0275               	subwf	___aldiv@dividend+1,w
   677     07BD  1D03               	skipz
   678     07BE  2FC1               	goto	u265
   679     07BF  0870               	movf	___aldiv@divisor,w
   680     07C0  0274               	subwf	___aldiv@dividend,w
   681     07C1                     u265:
   682     07C1  1C03               	skipc
   683     07C2  2FC4               	goto	u261
   684     07C3  2FC5               	goto	u260
   685     07C4                     u261:
   686     07C4  2FD4               	goto	l755
   687     07C5                     u260:
   688     07C5                     l751:
   689     07C5  0870               	movf	___aldiv@divisor,w
   690     07C6  02F4               	subwf	___aldiv@dividend,f
   691     07C7  0871               	movf	___aldiv@divisor+1,w
   692     07C8  1C03               	skipc
   693     07C9  0F71               	incfsz	___aldiv@divisor+1,w
   694     07CA  02F5               	subwf	___aldiv@dividend+1,f
   695     07CB  0872               	movf	___aldiv@divisor+2,w
   696     07CC  1C03               	skipc
   697     07CD  0F72               	incfsz	___aldiv@divisor+2,w
   698     07CE  02F6               	subwf	___aldiv@dividend+2,f
   699     07CF  0873               	movf	___aldiv@divisor+3,w
   700     07D0  1C03               	skipc
   701     07D1  0F73               	incfsz	___aldiv@divisor+3,w
   702     07D2  02F7               	subwf	___aldiv@dividend+3,f
   703     07D3                     l753:
   704     07D3  1422               	bsf	___aldiv@quotient,0
   705     07D4                     l755:
   706     07D4  3001               	movlw	1
   707     07D5                     u275:
   708     07D5  1003               	clrc
   709     07D6  0CF3               	rrf	___aldiv@divisor+3,f
   710     07D7  0CF2               	rrf	___aldiv@divisor+2,f
   711     07D8  0CF1               	rrf	___aldiv@divisor+1,f
   712     07D9  0CF0               	rrf	___aldiv@divisor,f
   713     07DA  3EFF               	addlw	-1
   714     07DB  1D03               	skipz
   715     07DC  2FD5               	goto	u275
   716     07DD                     l757:
   717     07DD  3001               	movlw	1
   718     07DE  02A0               	subwf	___aldiv@counter,f
   719     07DF  1D03               	btfss	3,2
   720     07E0  2FE2               	goto	u281
   721     07E1  2FE3               	goto	u280
   722     07E2                     u281:
   723     07E2  2FAA               	goto	l747
   724     07E3                     u280:
   725     07E3                     l759:
   726     07E3  0821               	movf	___aldiv@sign,w
   727     07E4  1903               	btfsc	3,2
   728     07E5  2FE7               	goto	u291
   729     07E6  2FE8               	goto	u290
   730     07E7                     u291:
   731     07E7  2FF3               	goto	l763
   732     07E8                     u290:
   733     07E8                     l761:
   734     07E8  09A2               	comf	___aldiv@quotient,f
   735     07E9  09A3               	comf	___aldiv@quotient+1,f
   736     07EA  09A4               	comf	___aldiv@quotient+2,f
   737     07EB  09A5               	comf	___aldiv@quotient+3,f
   738     07EC  0AA2               	incf	___aldiv@quotient,f
   739     07ED  1903               	skipnz
   740     07EE  0AA3               	incf	___aldiv@quotient+1,f
   741     07EF  1903               	skipnz
   742     07F0  0AA4               	incf	___aldiv@quotient+2,f
   743     07F1  1903               	skipnz
   744     07F2  0AA5               	incf	___aldiv@quotient+3,f
   745     07F3                     l763:
   746     07F3  0825               	movf	___aldiv@quotient+3,w
   747     07F4  00F3               	movwf	?___aldiv+3
   748     07F5  0824               	movf	___aldiv@quotient+2,w
   749     07F6  00F2               	movwf	?___aldiv+2
   750     07F7  0823               	movf	___aldiv@quotient+1,w
   751     07F8  00F1               	movwf	?___aldiv+1
   752     07F9  0822               	movf	___aldiv@quotient,w
   753     07FA  00F0               	movwf	?___aldiv
   754     07FB                     l228:
   755     07FB  0008               	return
   756     07FC                     __end_of___aldiv:
   757                           
   758                           	psect	text3
   759     067B                     __ptext3:	
   760 ;; *************** function _SendUARTString *****************
   761 ;; Defined at:
   762 ;;		line 80 in file "newmain.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  str             1    wreg     PTR unsigned char 
   765 ;;		 -> STR_1(5), 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  str             1    2[COMMON] PTR unsigned char 
   768 ;;		 -> STR_1(5), 
   769 ;;  i               2    0[COMMON] int 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         3       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         3       0       0       0       0
   783 ;;Total ram usage:        3 bytes
   784 ;; Hardware stack levels used: 2
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792     067B                     _SendUARTString:	
   793                           ;psect for function _SendUARTString
   794                           
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _SendUARTString: [wreg-fsr0h+status,2+status,0+pclath]
   798                           ;SendUARTString@str stored from wreg
   799     067B  00F2               	movwf	SendUARTString@str
   800     067C                     l823:
   801                           
   802                           ;newmain.c: 81:     int i = 0;
   803     067C  01F0               	clrf	SendUARTString@i
   804     067D  01F1               	clrf	SendUARTString@i+1
   805                           
   806                           ;newmain.c: 83:     while (str[i] != '\0') {
   807     067E  2E94               	goto	l829
   808     067F                     l63:
   809     067F  1283               	bcf	3,5	;RP0=0, select bank0
   810     0680  1303               	bcf	3,6	;RP1=0, select bank0
   811     0681  1E0C               	btfss	12,4	;volatile
   812     0682  2E84               	goto	u361
   813     0683  2E85               	goto	u360
   814     0684                     u361:
   815     0684  2E7F               	goto	l63
   816     0685                     u360:
   817     0685                     l825:
   818                           
   819                           ;newmain.c: 86:         TXREG = str[i];
   820     0685  0870               	movf	SendUARTString@i,w
   821     0686  0772               	addwf	SendUARTString@str,w
   822     0687  0084               	movwf	4
   823     0688  120A  118A  2003  120A  118A  	fcall	stringdir
   824     068D  0099               	movwf	25	;volatile
   825     068E                     l827:
   826                           
   827                           ;newmain.c: 87:         i++;
   828     068E  3001               	movlw	1
   829     068F  07F0               	addwf	SendUARTString@i,f
   830     0690  1803               	skipnc
   831     0691  0AF1               	incf	SendUARTString@i+1,f
   832     0692  3000               	movlw	0
   833     0693  07F1               	addwf	SendUARTString@i+1,f
   834     0694                     l829:
   835                           
   836                           ;newmain.c: 83:     while (str[i] != '\0') {
   837     0694  0870               	movf	SendUARTString@i,w
   838     0695  0772               	addwf	SendUARTString@str,w
   839     0696  0084               	movwf	4
   840     0697  120A  118A  2003  120A  118A  	fcall	stringdir
   841     069C  3A00               	xorlw	0
   842     069D  1D03               	skipz
   843     069E  2EA0               	goto	u371
   844     069F  2EA1               	goto	u370
   845     06A0                     u371:
   846     06A0  2E7F               	goto	l63
   847     06A1                     u370:
   848     06A1                     l67:
   849     06A1  0008               	return
   850     06A2                     __end_of_SendUARTString:
   851                           
   852                           	psect	text4
   853     0706                     __ptext4:	
   854 ;; *************** function _BottoneCliccato *****************
   855 ;; Defined at:
   856 ;;		line 41 in file "newmain.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  j               1    4[COMMON] unsigned char 
   861 ;;  read            1    1[COMMON] unsigned char 
   862 ;;  i               1    3[COMMON] unsigned char 
   863 ;;  k               1    2[COMMON] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      unsigned char 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         4       0       0       0       0
   875 ;;      Temps:          1       0       0       0       0
   876 ;;      Totals:         5       0       0       0       0
   877 ;;Total ram usage:        5 bytes
   878 ;; Hardware stack levels used: 2
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886     0706                     _BottoneCliccato:	
   887                           ;psect for function _BottoneCliccato
   888                           
   889     0706                     l781:	
   890                           ;incstack = 0
   891                           ; Regs used in _BottoneCliccato: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   892                           
   893                           
   894                           ;newmain.c: 42:     char k = 99;
   895     0706  3063               	movlw	99
   896     0707  00F2               	movwf	BottoneCliccato@k
   897                           
   898                           ;newmain.c: 45:     TRISD = 0x0F;
   899     0708  300F               	movlw	15
   900     0709  1683               	bsf	3,5	;RP0=1, select bank1
   901     070A  1303               	bcf	3,6	;RP1=0, select bank1
   902     070B  0088               	movwf	8	;volatile
   903     070C                     l783:
   904                           
   905                           ;newmain.c: 46:     TRISB &= ~0x07;
   906     070C  30F8               	movlw	248
   907     070D  00FF               	movwf	btemp+1
   908     070E  087F               	movf	btemp+1,w
   909     070F  0586               	andwf	6,f	;volatile
   910     0710                     l785:
   911                           
   912                           ;newmain.c: 48:     for (char i = 0; i < 3; i++) {
   913     0710  01F3               	clrf	BottoneCliccato@i
   914     0711                     l791:
   915                           
   916                           ;newmain.c: 49:         PORTB = c[i];
   917     0711  0873               	movf	BottoneCliccato@i,w
   918     0712  3E01               	addlw	low ((_c-__stringbase)| (0+32768))
   919     0713  0084               	movwf	4
   920     0714  120A  118A  2003  120A  118A  	fcall	stringdir
   921     0719  1283               	bcf	3,5	;RP0=0, select bank0
   922     071A  1303               	bcf	3,6	;RP1=0, select bank0
   923     071B  0086               	movwf	6	;volatile
   924     071C                     l793:
   925                           
   926                           ;newmain.c: 50:         _delay((unsigned long)((50)*(8000000/4000000.0)));
   927     071C  3021               	movlw	33
   928     071D  00F0               	movwf	??_BottoneCliccato
   929     071E                     u397:
   930     071E  0BF0               	decfsz	??_BottoneCliccato,f
   931     071F  2F1E               	goto	u397
   932     0720                     l795:
   933                           
   934                           ;newmain.c: 52:         char read = ~PORTD & TRISD;
   935     0720  1283               	bcf	3,5	;RP0=0, select bank0
   936     0721  1303               	bcf	3,6	;RP1=0, select bank0
   937     0722  0908               	comf	8,w	;volatile
   938     0723  1683               	bsf	3,5	;RP0=1, select bank1
   939     0724  1303               	bcf	3,6	;RP1=0, select bank1
   940     0725  0508               	andwf	8,w	;volatile
   941     0726  00F1               	movwf	BottoneCliccato@read
   942     0727                     l797:
   943                           
   944                           ;newmain.c: 54:         for (char j = 0; j < 4; j++) {
   945     0727  01F4               	clrf	BottoneCliccato@j
   946     0728                     l803:
   947                           
   948                           ;newmain.c: 55:             if (read & (1 << j))
   949     0728  3001               	movlw	1
   950     0729  00F0               	movwf	??_BottoneCliccato
   951     072A  0A74               	incf	BottoneCliccato@j,w
   952     072B  2F2E               	goto	u314
   953     072C                     u315:
   954     072C  1003               	clrc
   955     072D  0DF0               	rlf	??_BottoneCliccato,f
   956     072E                     u314:
   957     072E  3EFF               	addlw	-1
   958     072F  1D03               	skipz
   959     0730  2F2C               	goto	u315
   960     0731  0870               	movf	??_BottoneCliccato,w
   961     0732  0571               	andwf	BottoneCliccato@read,w
   962     0733  1903               	btfsc	3,2
   963     0734  2F36               	goto	u321
   964     0735  2F37               	goto	u320
   965     0736                     u321:
   966     0736  2F42               	goto	l807
   967     0737                     u320:
   968     0737                     l805:
   969                           
   970                           ;newmain.c: 56:                 k = j + (4 * i);
   971     0737  0873               	movf	BottoneCliccato@i,w
   972     0738  00F0               	movwf	??_BottoneCliccato
   973     0739  3002               	movlw	2
   974     073A                     u335:
   975     073A  1003               	clrc
   976     073B  0DF0               	rlf	??_BottoneCliccato,f
   977     073C  3EFF               	addlw	-1
   978     073D  1D03               	skipz
   979     073E  2F3A               	goto	u335
   980     073F  0874               	movf	BottoneCliccato@j,w
   981     0740  0770               	addwf	??_BottoneCliccato,w
   982     0741  00F2               	movwf	BottoneCliccato@k
   983     0742                     l807:
   984                           
   985                           ;newmain.c: 57:         }
   986     0742  3001               	movlw	1
   987     0743  00FF               	movwf	btemp+1
   988     0744  087F               	movf	btemp+1,w
   989     0745  07F4               	addwf	BottoneCliccato@j,f
   990     0746                     l809:
   991     0746  3004               	movlw	4
   992     0747  0274               	subwf	BottoneCliccato@j,w
   993     0748  1C03               	skipc
   994     0749  2F4B               	goto	u341
   995     074A  2F4C               	goto	u340
   996     074B                     u341:
   997     074B  2F28               	goto	l803
   998     074C                     u340:
   999     074C                     l811:
  1000                           
  1001                           ;newmain.c: 58:     }
  1002     074C  3001               	movlw	1
  1003     074D  00FF               	movwf	btemp+1
  1004     074E  087F               	movf	btemp+1,w
  1005     074F  07F3               	addwf	BottoneCliccato@i,f
  1006     0750                     l813:
  1007     0750  3003               	movlw	3
  1008     0751  0273               	subwf	BottoneCliccato@i,w
  1009     0752  1C03               	skipc
  1010     0753  2F55               	goto	u351
  1011     0754  2F56               	goto	u350
  1012     0755                     u351:
  1013     0755  2F11               	goto	l791
  1014     0756                     u350:
  1015     0756                     l815:
  1016                           
  1017                           ;newmain.c: 60:     TRISD = 0x00;
  1018     0756  1683               	bsf	3,5	;RP0=1, select bank1
  1019     0757  1303               	bcf	3,6	;RP1=0, select bank1
  1020     0758  0188               	clrf	8	;volatile
  1021     0759                     l817:
  1022                           
  1023                           ;newmain.c: 61:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  1024     0759  300D               	movlw	13
  1025     075A  00F0               	movwf	??_BottoneCliccato
  1026     075B                     u407:
  1027     075B  0BF0               	decfsz	??_BottoneCliccato,f
  1028     075C  2F5B               	goto	u407
  1029     075D                     l819:
  1030                           
  1031                           ;newmain.c: 63:     return k;
  1032     075D  0872               	movf	BottoneCliccato@k,w
  1033     075E                     l55:
  1034     075E  0008               	return
  1035     075F                     __end_of_BottoneCliccato:
  1036     007E                     btemp	set	126	;btemp
  1037     007E                     wtemp0	set	126
  1038                           
  1039                           	psect	config
  1040                           
  1041                           ;Config register CONFIG @ 0x2007
  1042                           ;	Oscillator Selection bits
  1043                           ;	FOSC = HS, HS oscillator
  1044                           ;	Watchdog Timer Enable bit
  1045                           ;	WDTE = OFF, WDT disabled
  1046                           ;	Power-up Timer Enable bit
  1047                           ;	PWRTE = ON, PWRT enabled
  1048                           ;	Brown-out Reset Enable bit
  1049                           ;	BOREN = ON, BOR enabled
  1050                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1051                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1052                           ;	Data EEPROM Memory Code Protection bit
  1053                           ;	CPD = OFF, Data EEPROM code protection off
  1054                           ;	Flash Program Memory Write Enable bits
  1055                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1056                           ;	In-Circuit Debugger Mode bit
  1057                           ;	DEBUG = 0x1, unprogrammed default
  1058                           ;	Flash Program Memory Code Protection bit
  1059                           ;	CP = OFF, Code protection off
  1060     2007                     	org	8199
  1061     2007  3FF2               	dw	16370

Data Sizes:
    Strings     5
    Constant    3
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     10      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    SendUARTString@str	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_initUART
    _initUART->___aldiv

Critical Paths under _main in BANK0

    _main->_initUART
    _initUART->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     900
                    _BottoneCliccato
                     _SendUARTString
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             8     4      4     550
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _SendUARTString                                       3     3      0     123
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _BottoneCliccato                                      5     5      0     227
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BottoneCliccato
   _SendUARTString
   _initUART
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 07 16:14:16 2023

       ?_BottoneCliccato 0070                        _c 0009                        pc 0002  
                     l55 075E                       l63 067F                       l58 0705  
                     l67 06A1                       fsr 0004                      l218 0773  
                    l228 07FB                      l811 074C                      l803 0728  
                    l731 0777                      l813 0750                      l805 0737  
                    l741 0799                      l733 0782                      l725 075F  
                    l815 0756                      l807 0742                      l823 067C  
                    l751 07C5                      l743 07A2                      l735 0786  
                    l727 0762                      l831 06A2                      l817 0759  
                    l809 0746                      l825 0685                      l761 07E8  
                    l753 07D3                      l745 07A6                      l737 078E  
                    l729 0766                      l833 06B1                      l819 075D  
                    l827 068E                      l763 07F3                      l755 07D4  
                    l747 07AA                      l739 0796                      l771 06D0  
                    l835 06B9                      l781 0706                      l829 0694  
                    l757 07DD                      l749 07B3                      l773 06D1  
                    l837 06BF                      l791 0711                      l783 070C  
                    l759 07E3                      l775 06D2                      l767 06C9  
                    l793 071C                      l785 0710                      l777 06D3  
                    l769 06CD                      l795 0720                      l779 06DA  
                    l797 0727                      u200 0766                      u201 0765  
                    u210 0777                      u211 0776                      u220 0796  
                    u300 06E8                      u221 0795                      u320 0737  
                    u240 07AA                      u321 0736                      u241 07A9  
                    u305 06E3                      u314 072E                      u315 072C  
                    u235 079B                      u340 074C                      u260 07C5  
                    u341 074B                      u261 07C4                      u350 0756  
                    u407 075B                      u351 0755                      u335 073A  
                    u255 07AC                      u360 0685                      u280 07E3  
                    u361 0684                      u281 07E2                      u265 07C1  
                    u370 06A1                      u290 07E8                      u371 06A0  
                    u291 07E7                      u275 07D5                      u380 06BF  
                    u381 06BE                      u397 071E                      fsr0 0004  
                   STR_1 000C                     _PIE1 008C                     _main 06A2  
                   btemp 007E                     start 0000          __end_of___aldiv 07FC  
                  ?_main 0070                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 06C9                   ??_main 007D         BottoneCliccato@i 0073  
       BottoneCliccato@j 0074         BottoneCliccato@k 0072                   _INTCON 000B  
              ??___aldiv 0078         __end_of_initUART 0706         initUART@baudRate 0026  
__end_of__initialization 07FC           __pcstackCOMMON 0070      BottoneCliccato@read 0071  
             __pmaintext 06A2               __stringtab 0003                ?_initUART 0026  
                ___aldiv 075F                  __ptext1 06C9                  __ptext2 075F  
                __ptext3 067B                  __ptext4 0706          SendUARTString@i 0070  
       ___aldiv@dividend 0074     end_of_initialization 07FC               ??_initUART 0079  
              _RCSTAbits 0018         ___aldiv@quotient 0022                _TRISCbits 0087  
      ??_BottoneCliccato 0070                _TXSTAbits 0098      start_initialization 07FC  
         _SendUARTString 067B                ___latbits 0002            __pcstackBANK0 0020  
              __end_of_c 000C   __end_of_SendUARTString 06A2                __pnvBANK0 002A  
               ?___aldiv 0070                __pstrings 0003        SendUARTString@str 0072  
        ?_SendUARTString 0070          ___aldiv@divisor 0070          ___aldiv@counter 0020  
               _PIR1bits 000C          _BottoneCliccato 0706              __stringbase 0008  
     __end_of__stringtab 0009                 _initUART 06C9  __end_of_BottoneCliccato 075F  
              stringcode 0003         ??_SendUARTString 0070                 stringdir 0003  
               stringtab 0003             ___aldiv@sign 0021           _letturabottone 002A  
